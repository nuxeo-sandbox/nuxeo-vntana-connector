{
  "swagger": "2.0",
  "info": {
    "description": "VNTANA API Documentation",
    "version": 1.2,
    "title": "VNTANA API Documentation",
    "termsOfService": "https://www.vntana.com/terms-and-conditions-of-use/",
    "contact": {}
  },
  "host": "api-platform.vntana.com",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Operations about annotations",
      "description": "Annotation Resource"
    },
    {
      "name": "Operations about attachments",
      "description": "Attachment Resource"
    },
    {
      "name": "Operations about authentication",
      "description": "Auth Resource"
    },
    {
      "name": "Operations about clients",
      "description": "Client Organization Resource"
    },
    {
      "name": "Operations about comments",
      "description": "Comment Resource"
    },
    {
      "name": "Operations about files load/download",
      "description": "G Cloud Storage Load Resource"
    },
    {
      "name": "Operations about files upload",
      "description": "G Cloud Storage Upload Resource"
    },
    {
      "name": "Operations about hotspots",
      "description": "Hotspot Resource"
    },
    {
      "name": "Operations about invitations",
      "description": "Invitation Resource"
    },
    {
      "name": "Operations about languages",
      "description": "Language Resource"
    },
    {
      "name": "Operations about locations",
      "description": "Location Resource"
    },
    {
      "name": "Operations about organizations",
      "description": "Organization Resource"
    },
    {
      "name": "Operations about pipelines",
      "description": "Pipeline Resource"
    },
    {
      "name": "Operations about product generation request",
      "description": "Product Generation Request Resource"
    },
    {
      "name": "Operations about products",
      "description": "Product Resource"
    },
    {
      "name": "Operations about showrooms",
      "description": "Showroom Resource"
    },
    {
      "name": "Operations about tag groups",
      "description": "Tag Group Resource"
    },
    {
      "name": "Operations about tags",
      "description": "Tag Resource"
    },
    {
      "name": "Operations about users",
      "description": "User Resource"
    },
    {
      "name": "Operations about variant groups",
      "description": "Variant Group Resource"
    }
  ],
  "paths": {
    "/v1/annotations": {
      "post": {
        "tags": [
          "Operations about annotations"
        ],
        "summary": "Create a new annotation",
        "operationId": "createUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachments",
            "description": "attached files to annotation",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dimensions",
            "description": "annotation's dimensions",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productUuid",
            "description": "product's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonCreateAnnotationRequestModel"
            }
          },
          {
            "name": "text",
            "description": "annotation's text",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AnnotationCreateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/AnnotationCreateResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/AnnotationCreateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Operations about annotations"
        ],
        "summary": "Update annotation",
        "operationId": "updateUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachments",
            "description": "attached files to annotation",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dimensions",
            "description": "annotation's dimensions",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonUpdateAnnotationRequestModel"
            }
          },
          {
            "name": "text",
            "description": "annotation's text",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "description": "annotation's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AnnotationUpdateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/AnnotationUpdateResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/AnnotationUpdateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/AnnotationUpdateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Operations about annotations"
        ],
        "summary": "Delete annotation",
        "operationId": "deleteUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonDeleteAnnotationRequestModel"
            }
          },
          {
            "name": "uuid",
            "description": "annotation's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AnnotationDeleteResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/AnnotationDeleteResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/AnnotationDeleteResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/AnnotationDeleteResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/annotations/images/{blobId}": {
      "get": {
        "tags": [
          "Operations about annotations"
        ],
        "summary": "Upload attachment for annotation",
        "operationId": "loadAttachmentUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "blobId",
            "in": "path",
            "description": "attachment blobId",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "description": "client uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AnnotationSearchResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/annotations/resolve": {
      "post": {
        "tags": [
          "Operations about annotations"
        ],
        "summary": "Resolve annotation",
        "operationId": "resolveUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResolveAnnotationRequestModel"
            }
          },
          {
            "name": "resolved",
            "description": "annotation's resolved flag",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "description": "annotation's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AnnotationResolveResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/AnnotationResolveResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/AnnotationResolveResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/AnnotationResolveResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/annotations/search": {
      "post": {
        "tags": [
          "Operations about annotations"
        ],
        "summary": "Search annotations",
        "operationId": "searchUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "productUuid",
            "description": "product's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonFindAnnotationByFilterRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AnnotationSearchResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/AnnotationSearchResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/AnnotationSearchResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/AnnotationSearchResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/attachments": {
      "post": {
        "tags": [
          "Operations about attachments"
        ],
        "summary": "create product related attachment resource",
        "operationId": "createProductAttachmentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "blobId",
            "in": "query",
            "description": "attachment's blobId",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "attachment's entityType",
            "required": true,
            "type": "string",
            "enum": [
              "COMMENT",
              "ANNOTATION",
              "PRODUCT",
              "ANNOTATION_COMMENT",
              "VARIANT_GROUP"
            ]
          },
          {
            "name": "entityUuid",
            "in": "query",
            "description": "attachment's entityUuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "attachment's name",
            "required": true,
            "type": "string"
          },
          {
            "name": "productUuid",
            "in": "query",
            "description": "attachment's productUuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentCreateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/AttachmentCreateResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/AttachmentCreateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/AttachmentCreateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/attachments/search": {
      "post": {
        "tags": [
          "Operations about attachments"
        ],
        "summary": "search attachments resources",
        "operationId": "searchUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "blobId",
            "description": "attachment's blobId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityType",
            "description": "attachment's entityType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityUuid",
            "description": "attachment's entityUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "attachment's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productUuid",
            "description": "attachment's productUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchAttachmentRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentSearchResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/AttachmentSearchResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/AttachmentSearchResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/attachments/upload": {
      "post": {
        "tags": [
          "Operations about attachments"
        ],
        "summary": "Upload attachment resource",
        "operationId": "uploadAttachmentResourceUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "description": "client's uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceUploadResponse"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/attachments/upload/product-attachment": {
      "post": {
        "tags": [
          "Operations about attachments"
        ],
        "summary": "Upload product attachment resource",
        "operationId": "uploadProductAttachmentResourceUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "description": "client's uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          },
          {
            "name": "productUuid",
            "in": "query",
            "description": "attachment's productUuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceUploadResponse"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/attachments/variant-group": {
      "post": {
        "tags": [
          "Operations about attachments"
        ],
        "summary": "create variant group related attachment resource",
        "operationId": "createVariantGroupAttachmentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "blobId",
            "in": "query",
            "description": "attachment's blobId",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "COMMENT",
              "ANNOTATION",
              "PRODUCT",
              "ANNOTATION_COMMENT",
              "VARIANT_GROUP"
            ]
          },
          {
            "name": "entityUuid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "attachment's name",
            "required": true,
            "type": "string"
          },
          {
            "name": "variantGroupUuid",
            "in": "query",
            "description": "attachment's variantGroupUuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentCreateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/VariantGroupAttachmentCreateResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/AttachmentCreateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/VariantGroupAttachmentCreateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/attachments/variant-group/{variantGroupUuid}/{uuid}": {
      "delete": {
        "tags": [
          "Operations about attachments"
        ],
        "summary": "delete variant group attachment resource",
        "operationId": "deleteVariantGroupAttachmentUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "attachment's uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "variantGroupUuid",
            "in": "path",
            "description": "attachment's variantGroupUuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentDeleteResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/VariantGroupAttachmentDeleteResultResponseNotFound"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/attachments/{productUuid}/{uuid}": {
      "delete": {
        "tags": [
          "Operations about attachments"
        ],
        "summary": "delete product attachment resource",
        "operationId": "deleteProductAttachmentUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "productUuid",
            "in": "path",
            "description": "attachment's productUuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "attachment's uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentDeleteResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/AttachmentDeleteResultResponseNotFound"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/auth/login": {
      "post": {
        "tags": [
          "Operations about authentication"
        ],
        "summary": "Login to platform",
        "description": "After login the list of organizations becomes available",
        "operationId": "fakeLoginUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignInRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "X-AUTH-TOKEN": {
                "type": "string",
                "description": "temporary token to retrieve organization"
              }
            },
            "schema": {
              "$ref": "#/definitions/LoginUserResultResponseOk"
            }
          },
          "403": {
            "description": "BAD_CREDENTIALS",
            "schema": {
              "$ref": "#/definitions/LoginUserResultResponseForbidden"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/auth/login/token": {
      "post": {
        "tags": [
          "Operations about authentication"
        ],
        "summary": "Login to platform using personal access token",
        "description": "After login the list of organizations becomes available",
        "operationId": "fakeLoginWithPersonalAccessTokenUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignInWithPersonalAccessTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "X-AUTH-TOKEN": {
                "type": "string",
                "description": "temporary token to retrieve organization"
              }
            },
            "schema": {
              "$ref": "#/definitions/LoginUserResultResponseOk"
            }
          },
          "403": {
            "description": "BAD_CREDENTIALS",
            "schema": {
              "$ref": "#/definitions/LoginUserResultResponseForbidden"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/auth/refresh-token": {
      "post": {
        "tags": [
          "Operations about authentication"
        ],
        "summary": "Login to Organization",
        "description": "Login to organization by retrieving new organization specific token",
        "operationId": "fakeRefreshTokenUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "X-AUTH-TOKEN",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationUuid",
            "in": "header",
            "description": "organizationUuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "X-AUTH-TOKEN": {
                "type": "string",
                "description": "organization specific token"
              }
            },
            "schema": {
              "$ref": "#/definitions/LoginUserResultResponseOk"
            }
          },
          "403": {
            "description": "BAD_CREDENTIALS",
            "schema": {
              "$ref": "#/definitions/LoginUserResultResponseForbidden"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/clients": {
      "post": {
        "tags": [
          "Operations about clients"
        ],
        "summary": "Create a new client",
        "operationId": "createUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "imageBlobId",
            "description": "client's imageBlobId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "client's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateClientOrganizationRequest"
            }
          },
          {
            "name": "slug",
            "description": "client's slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClientCreateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ClientCreateResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ClientCreateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Operations about clients"
        ],
        "summary": "Update client",
        "operationId": "updateUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "imageBlobId",
            "description": "client's imageBlobId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "client's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateClientOrganizationRequest"
            }
          },
          {
            "name": "uuid",
            "description": "client's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClientUpdateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ClientUpdateResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ClientUpdateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/clients/client-organizations": {
      "get": {
        "tags": [
          "Operations about clients"
        ],
        "summary": "Get client list of current organizations",
        "operationId": "getClientOrganizationsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClientOrganizationResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/clients/client-organizations/users/{userUuid}": {
      "get": {
        "tags": [
          "Operations about clients"
        ],
        "summary": "Get client list of current organizations",
        "operationId": "getClientOrganizationsForUserUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "userUuid",
            "in": "path",
            "description": "userUuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClientOrganizationResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/clients/images/{uuid}": {
      "get": {
        "tags": [
          "Operations about clients"
        ],
        "summary": "loadImage",
        "operationId": "loadImageUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/v1/clients/slug-availability": {
      "post": {
        "tags": [
          "Operations about clients"
        ],
        "summary": "Check slug availability",
        "operationId": "checkSlugAvailabilityUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckAvailableClientOrganizationSlugRequest"
            }
          },
          {
            "name": "slug",
            "description": "client's slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClientOrganizationSlugAvailableResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ClientOrganizationSlugAvailibilityResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/clients/{uuid}": {
      "get": {
        "tags": [
          "Operations about clients"
        ],
        "summary": "Get client details",
        "operationId": "getByUuidUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClientGetResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ClientGetResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ClientGetResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/comments": {
      "post": {
        "tags": [
          "Operations about comments"
        ],
        "summary": "Create a new product comment",
        "operationId": "createProductCommentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachments",
            "description": "product aware attached files to comment",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityType",
            "description": "comment's related type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityUuid",
            "description": "comment's related entity's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message",
            "description": "comment's message",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonCreateProductCommentRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommentCreateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/CommentCreateResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/CommentCreateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": true
      },
      "put": {
        "tags": [
          "Operations about comments"
        ],
        "summary": "Update product comment",
        "operationId": "updateProductCommentUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachments",
            "description": "product aware attached files to comment",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityUuid",
            "description": "comment's related entity's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message",
            "description": "comment's message",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonUpdateProductCommentRequestModel"
            }
          },
          {
            "name": "uuid",
            "description": "comment's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommentUpdateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/CommentUpdateResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/CommentUpdateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": true
      },
      "delete": {
        "tags": [
          "Operations about comments"
        ],
        "summary": "Delete comment",
        "operationId": "deleteUsingDELETE_1",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonDeleteCommentRequestModel"
            }
          },
          {
            "name": "uuid",
            "description": "comment's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommentDeleteResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/CommentDeleteResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/CommentDeleteResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/comments/create": {
      "post": {
        "tags": [
          "Operations about comments"
        ],
        "summary": "Create a new comment",
        "operationId": "createCommentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachments",
            "description": "attached files to comment",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachments[0].blobId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attachments[0].entityUuid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attachments[0].name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "comment's related type",
            "required": true,
            "type": "string",
            "enum": [
              "ANNOTATION",
              "PRODUCT",
              "VARIANT_GROUP"
            ]
          },
          {
            "name": "entityUuid",
            "in": "query",
            "description": "comment's related entity's uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "message",
            "in": "query",
            "description": "comment's message",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommentCreateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/CommentCreateResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/CommentCreateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/comments/images/{blobId}": {
      "get": {
        "tags": [
          "Operations about comments"
        ],
        "summary": "Upload attachment for comment",
        "operationId": "loadAttachmentUsingGET_1",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "blobId",
            "in": "path",
            "description": "attachment blobId",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "description": "client uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommentSearchResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/comments/search": {
      "post": {
        "tags": [
          "Operations about comments"
        ],
        "summary": "Search comments",
        "operationId": "searchUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityType",
            "description": "comment's related type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityUuid",
            "description": "comment's related entity's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonFindCommentByFilterRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommentSearchResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/CommentSearchResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/CommentSearchResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/CommentSearchResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/comments/update": {
      "put": {
        "tags": [
          "Operations about comments"
        ],
        "summary": "Update comment",
        "operationId": "updateCommentUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachments",
            "description": "attached files to comment",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachments[0].blobId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attachments[0].entityUuid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attachments[0].name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityUuid",
            "in": "query",
            "description": "comment's related entity's uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "message",
            "in": "query",
            "description": "comment's message",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "comment's uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommentUpdateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/CommentUpdateResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/CommentUpdateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/hotspots": {
      "post": {
        "tags": [
          "Operations about hotspots"
        ],
        "summary": "Create hotspot by request",
        "operationId": "createUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "createHotspotRequestModel",
            "description": "createHotspotRequestModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateHotspotRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HotspotCreateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/HotspotCreateResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/HotspotCreateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/HotspotCreateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Operations about hotspots"
        ],
        "summary": "Update hotspot by request",
        "operationId": "updateUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updateHotspotRequestModel",
            "description": "updateHotspotRequestModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateHotspotRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HotspotUpdateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/HotspotUpdateResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/HotspotUpdateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/HotspotUpdateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/hotspots/images/{blobId}": {
      "get": {
        "tags": [
          "Operations about hotspots"
        ],
        "summary": "Load image for hotspot",
        "operationId": "loadImageUsingGET_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "blobId",
            "in": "path",
            "description": "image hotspot blobId",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "description": "client uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HotspotGetResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/hotspots/search": {
      "post": {
        "tags": [
          "Operations about hotspots"
        ],
        "summary": "Search hotspots by provided parameters",
        "operationId": "searchUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "page",
            "description": "the page number of result set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/integer"
            }
          },
          {
            "in": "body",
            "name": "productUuid",
            "description": "hotspot product uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "searchHotspotRequestModel",
            "description": "searchHotspotRequestModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchHotspotRequestModel"
            }
          },
          {
            "in": "body",
            "name": "size",
            "description": "the page size of result set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HotspotGetResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/HotspotGetResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/hotspots/upload/images": {
      "post": {
        "tags": [
          "Operations about hotspots"
        ],
        "summary": "Upload image for hotspot",
        "operationId": "uploadImageUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "description": "client uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceUploadResponse"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/hotspots/{uuid}": {
      "delete": {
        "tags": [
          "Operations about hotspots"
        ],
        "summary": "Delete hotspot by uuid",
        "operationId": "deleteUsingDELETE_2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "hotspot uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HotspotDeleteResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/HotspotDeleteResultResponseNotFound"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/invitations/invited": {
      "post": {
        "tags": [
          "Operations about invitations"
        ],
        "summary": "Get all invited user invitations",
        "operationId": "getAllInvitedUserInvitationsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminGetAllByStatusInvitationUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvitationGetAllInvitedUserInvitationsResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/InvitationGetAllInvitedUserInvitationsResultResponseNotFound"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/invitations/organization-invitation/{token}": {
      "get": {
        "tags": [
          "Operations about invitations"
        ],
        "summary": "Get organization invitation",
        "operationId": "getOrganizationInvitationUsingGET",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvitationGetOrganizationInvitationResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/InvitationGetOrganizationInvitationResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/InvitationGetOrganizationInvitationResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/invitations/organizations/accept": {
      "post": {
        "tags": [
          "Operations about invitations"
        ],
        "summary": "Accept organization invitation",
        "operationId": "acceptOrganizationInvitationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationName",
            "description": "Name of the organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationSlug",
            "description": "Slug of the organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptInvitationOrganizationRequest"
            }
          },
          {
            "name": "token",
            "description": "Organization specific token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptOrganizationInvitationResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptOrganizationInvitationResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptOrganizationInvitationResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptOrganizationInvitationResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/invitations/organizations/accept-sign-up": {
      "post": {
        "tags": [
          "Operations about invitations"
        ],
        "summary": "Accept organization invitation and sign up",
        "operationId": "acceptOrganizationInvitationAndSignUpUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationName",
            "description": "Name of the organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationSlug",
            "description": "Slug of the organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptAndSignUpInvitationOrganizationRequest"
            }
          },
          {
            "name": "token",
            "description": "Organization specific token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userFullName",
            "description": "Full name of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userPassword",
            "description": "Password of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptOrganizationInvitationAndSignUpResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptOrganizationInvitationAndSignUpResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptOrganizationInvitationAndSignUpResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptOrganizationInvitationAndSignUpResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/invitations/reject/{token}": {
      "put": {
        "tags": [
          "Operations about invitations"
        ],
        "summary": "Get organization invitation",
        "operationId": "rejectUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvitationRejectResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/InvitationRejectResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/InvitationRejectResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/InvitationRejectResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/invitations/user-invitation/client-organization": {
      "post": {
        "tags": [
          "Operations about invitations"
        ],
        "summary": "invite user to client organization",
        "operationId": "inviteUserToClientOrganizationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "description": "Invited user email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invitations",
            "description": "list of client invitations",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCreateUserInvitationForOrganizationClientsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvitationInviteUserToClientOrganizationResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/InvitationInviteUserToClientOrganizationResultResponseNotFound"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/InvitationInviteUserToClientOrganizationResultResponseNotAcceptable"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/InvitationInviteUserToClientOrganizationResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/InvitationInviteUserToClientOrganizationResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/invitations/user-invitation/organization": {
      "post": {
        "tags": [
          "Operations about invitations"
        ],
        "summary": "invite user to organization",
        "operationId": "inviteUserToOrganizationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "description": "Invited user email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCreateInvitationUserForOrganizationRequest"
            }
          },
          {
            "name": "userRole",
            "description": "invitation user role",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvitationInviteUserToOrganizationResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/InvitationInviteUserToOrganizationResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/InvitationInviteUserToOrganizationResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/invitations/user-invitation/{token}": {
      "get": {
        "tags": [
          "Operations about invitations"
        ],
        "summary": "Get user invitation",
        "operationId": "getUserInvitationUsingGET",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "User invitation type: Organization or Client",
            "required": true,
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "CLIENT"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvitationGetUserInvitationResultResponseOk"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/InvitationGetUserInvitationResultResponseBadRequest"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/InvitationGetUserInvitationResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/InvitationGetUserInvitationResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/invitations/users/accept-sign-up/client-organization": {
      "post": {
        "tags": [
          "Operations about invitations"
        ],
        "summary": "Accept user invitation to client and sign up",
        "operationId": "acceptUserInvitationToClientAndSignUpUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "acceptInvitationUserAndSignUpRequest",
            "description": "acceptInvitationUserAndSignUpRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptInvitationUserAndSignUpRequest"
            }
          },
          {
            "name": "newUserFullName",
            "description": "Full name of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "description": "Organization specific token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userPassword",
            "description": "Password of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToClientAndSignUpResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToClientAndSignUpResultResponseNotFound"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToClientAndSignUpResultResponseNotAcceptable"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToClientAndSignUpResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToClientAndSignUpResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/invitations/users/accept-sign-up/organization": {
      "post": {
        "tags": [
          "Operations about invitations"
        ],
        "summary": "Accept user invitation to organization and sign up",
        "operationId": "acceptUserInvitationToOrganizationAndSignUpUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "newUserFullName",
            "description": "Full name of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptInvitationUserAndSignUpRequest"
            }
          },
          {
            "name": "token",
            "description": "Organization specific token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userPassword",
            "description": "Password of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToOrganizationAndSignUpResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToOrganizationAndSignUpResultResponseNotFound"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToOrganizationAndSignUpResultResponseNotAcceptable"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToOrganizationAndSignUpResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToOrganizationAndSignUpResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/invitations/users/accept/client-organization": {
      "post": {
        "tags": [
          "Operations about invitations"
        ],
        "summary": "Accept user invitation to client organization",
        "operationId": "acceptUserInvitationToClientUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "acceptInvitationUserRequest",
            "description": "acceptInvitationUserRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptInvitationUserRequest"
            }
          },
          {
            "name": "token",
            "description": "Organization specific token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToOrganizationResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToClientResultResponseNotFound"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToClientResultResponseNotAcceptable"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToClientResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToClientResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/invitations/users/accept/organization": {
      "post": {
        "tags": [
          "Operations about invitations"
        ],
        "summary": "Accept user invitation to organization",
        "operationId": "acceptUserInvitationToOrganizationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptInvitationUserRequest"
            }
          },
          {
            "name": "token",
            "description": "Organization specific token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToOrganizationResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToOrganizationResultResponseNotFound"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToOrganizationResultResponseNotAcceptable"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToOrganizationResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/InvitationAcceptUserInvitationToOrganizationResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/languages": {
      "get": {
        "tags": [
          "Operations about languages"
        ],
        "summary": "Get all languages",
        "operationId": "getAllUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LanguageGetResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/languages/{uuid}": {
      "get": {
        "tags": [
          "Operations about languages"
        ],
        "summary": "Get language by uuid",
        "operationId": "getByUuidUsingGET_1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LanguageGetResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/LanguageGetResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/LanguageGetResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/locations": {
      "post": {
        "tags": [
          "Operations about locations"
        ],
        "summary": "Create a new location",
        "operationId": "createUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "description": "client's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "description": "location's description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "description": "location's domain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geoLocation",
            "description": "location's geolocation object",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languageUuid",
            "description": "language's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "location's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "regionUuid",
            "description": "location's region uuid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationCreateRequest"
            }
          },
          {
            "name": "tagsUuids",
            "description": "tags' uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LocationCreateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/LocationCreateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/LocationCreateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Operations about locations"
        ],
        "summary": "Update the location",
        "operationId": "updateUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "description": "location's description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "description": "location's domain",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geoLocation",
            "description": "location's geolocation object",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languageUuid",
            "description": "language's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "location's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "regionUuid",
            "description": "location's region uuid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationUpdateRequest"
            }
          },
          {
            "name": "tagsUuids",
            "description": "tags' uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "description": "location's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LocationUpdateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/LocationUpdateResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/LocationUpdateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/LocationUpdateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/locations/check-usages": {
      "post": {
        "tags": [
          "Operations about locations"
        ],
        "summary": "Check usage of locations",
        "description": "returns true if any of location is used in products",
        "operationId": "checkUsageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "uuids",
            "description": "uuids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LocationUsedResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/LocationUsedResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/locations/delete": {
      "delete": {
        "tags": [
          "Operations about locations"
        ],
        "summary": "Delete locations",
        "description": "Returns count of affected locations",
        "operationId": "deleteUsingDELETE_3",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationDeleteRequest"
            }
          },
          {
            "name": "uuids",
            "description": "locations' uuids",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LocationDeleteResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/LocationDeleteResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/locations/search": {
      "post": {
        "tags": [
          "Operations about locations"
        ],
        "summary": "Search locations",
        "operationId": "searchUsingPOST_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "description": "location's clientUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromCreated",
            "description": "location min created date",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "the page number of result set",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchLocationSearchAdminRequest"
            }
          },
          {
            "name": "searchTerm",
            "description": "search term",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "the page size of result set",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagNames",
            "description": "retrieved locations contains any of provided tag names",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toCreated",
            "description": "location max created date",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchLocationSearchAdminResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/locations/{uuid}": {
      "get": {
        "tags": [
          "Operations about locations"
        ],
        "summary": "Retrieve location by uuid",
        "operationId": "getByUuidUsingGET_2",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LocationGetResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/LocationGetResultResponseNotFound"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/organizations": {
      "get": {
        "tags": [
          "Operations about organizations"
        ],
        "summary": "Get available organizations list",
        "operationId": "getUserOrganizationsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserOrganizationResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/UserOrganizationResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UserOrganizationResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/organizations/current": {
      "get": {
        "tags": [
          "Operations about organizations"
        ],
        "summary": "Get logged in organization details",
        "operationId": "getCurrentOrganizationUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrganizationGetResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/OrganizationGetResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/OrganizationGetResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/organizations/images/{uuid}": {
      "get": {
        "tags": [
          "Operations about organizations"
        ],
        "summary": "loadImage",
        "operationId": "loadImageUsingGET_2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/v1/organizations/slug-availability": {
      "post": {
        "tags": [
          "Operations about organizations"
        ],
        "summary": "Check slug availability",
        "operationId": "checkSlugAvailabilityUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckAvailableOrganizationSlugRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrganizationSlugAvailable"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/OrganizationSlugAvailibilityResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/pipelines": {
      "get": {
        "tags": [
          "Operations about pipelines"
        ],
        "summary": "Get all pipelines",
        "operationId": "getPipelinesUsingGET",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PipelinesGetPipelinesResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/pipelines/{uuid}": {
      "get": {
        "tags": [
          "Operations about pipelines"
        ],
        "summary": "Get pipeline by uuid",
        "operationId": "getPipelineByUuidUsingGET",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "pipeline's uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PipelinesGetPipelineByUuidResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/product-generation-requests": {
      "post": {
        "tags": [
          "Operations about product generation request"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductGenerationRequestCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductGenerationRequestCreateResultResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/product-generation-requests/search": {
      "post": {
        "tags": [
          "Operations about product generation request"
        ],
        "summary": "search",
        "operationId": "searchUsingPOST_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindProductGenerationRequestByFilterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductGenerationRequestSearchResultResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/product-generation-requests/{uuid}": {
      "get": {
        "tags": [
          "Operations about product generation request"
        ],
        "summary": "getByUuid",
        "operationId": "getByUuidUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductGenerationRequestGetResultResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/products": {
      "post": {
        "tags": [
          "Operations about products"
        ],
        "summary": "Create a new product",
        "operationId": "createUsingPOST_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "attributes",
            "description": "product's attributes map",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "autoPublish",
            "description": "product's auto-publish",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientUuid",
            "description": "client's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "description": "product's description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationsUuids",
            "description": "list of locations' uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelOpsParameters",
            "description": "    \n    \"DRACO_COMPRESSION\": {\n      \"enabled\": \"true\" \"or\" \"false\",\n    },\n    \"OPTIMIZATION\": {\n      \"desiredOutput\": \"AUTO\",\n      \"obstructedGeometry\": \"true\" \"or\" \"false\",\n      \"poly\": \"1000\"\n    },\n    \"TEXTURE_COMPRESSION\": {\n      \"lossless\": \"true\" \"or\" \"false\",\n      \"maxDimension\": \"1024\",\n      \"aggression\": \"7\"\n    }",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "product's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationUuid",
            "description": "organization's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonProductCreateRequest"
            }
          },
          {
            "name": "tagsUuids",
            "description": "list of tags' uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductCreateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProductCreateResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ProductCreateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ProductCreateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Operations about products"
        ],
        "summary": "Update product",
        "operationId": "updateUsingPUT_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "attributes",
            "description": "product's attributes map",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "autoPublish",
            "description": "product's auto-publish",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deleteAsset",
            "description": "product's delete asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "description": "product's description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationsUuids",
            "description": "list of locations' uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelOpsParameters",
            "description": "    \n    \"DRACO_COMPRESSION\": {\n      \"enabled\": \"true\" \"or\" \"false\",\n    },\n    \"OPTIMIZATION\": {\n      \"desiredOutput\": \"AUTO\",\n      \"obstructedGeometry\": \"true\" \"or\" \"false\",\n      \"poly\": \"1000\"\n    },\n    \"TEXTURE_COMPRESSION\": {\n      \"lossless\": \"true\" \"or\" \"false\",\n      \"maxDimension\": \"1024\",\n      \"aggression\": \"7\"\n    }",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "product's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonProductUpdateRequest"
            }
          },
          {
            "name": "tagsUuids",
            "description": "list of tags' uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "description": "product's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductUpdateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProductUpdateResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ProductUpdateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ProductUpdateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/clients/search": {
      "post": {
        "tags": [
          "Operations about products"
        ],
        "summary": "Search products",
        "operationId": "searchUsingPOST_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "description": "clientUuid's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversionStatuses",
            "description": "product's searchTerm",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PENDING",
                "CONVERTING",
                "COMPLETED",
                "FAILED",
                "NO_ASSET"
              ]
            }
          },
          {
            "name": "locationsUuids",
            "description": "list of locations' uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "results page you want to retrieve (1..infinity)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductSearchRequest"
            }
          },
          {
            "name": "searchTerm",
            "description": "product's searchTerm",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "number of records per page (1..infinity)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorts",
            "description": "sortable properties",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "description": "product's searchTerm",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DRAFT",
                "LIVE"
              ]
            }
          },
          {
            "name": "tagsUuids",
            "description": "list of tags' uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductSearchInOneClientResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ProductSearchInOneClientResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/clients/{clientUuid}/search": {
      "post": {
        "tags": [
          "Operations about products"
        ],
        "summary": "Search products in one client",
        "operationId": "searchInOneClientUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "path",
            "description": "clientUuid's uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "conversionStatuses",
            "description": "product's searchTerm",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PENDING",
                "CONVERTING",
                "COMPLETED",
                "FAILED",
                "NO_ASSET"
              ]
            }
          },
          {
            "name": "locationsUuids",
            "description": "list of locations' uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "results page you want to retrieve (1..infinity)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductSearchRequest"
            }
          },
          {
            "name": "searchTerm",
            "description": "product's searchTerm",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "number of records per page (1..infinity)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorts",
            "description": "sortable properties",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "description": "product's searchTerm",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DRAFT",
                "LIVE"
              ]
            }
          },
          {
            "name": "tagsUuids",
            "description": "list of tags' uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductSearchResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ProductSearchResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/create/send-for-review": {
      "post": {
        "tags": [
          "Operations about products"
        ],
        "summary": "Create a new product and send it for review",
        "operationId": "createAndSendForReviewUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "attributes",
            "description": "product's attributes map",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "autoPublish",
            "description": "product's auto-publish",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientUuid",
            "description": "client's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "description",
            "description": "product's description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "locationsUuids",
            "description": "list of locations' uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "modelOpsParameters",
            "description": "    \n    \"DRACO_COMPRESSION\": {\n      \"enabled\": \"true\" \"or\" \"false\",\n    },\n    \"OPTIMIZATION\": {\n      \"desiredOutput\": \"AUTO\",\n      \"obstructedGeometry\": \"true\" \"or\" \"false\",\n      \"poly\": \"1000\"\n    },\n    \"TEXTURE_COMPRESSION\": {\n      \"lossless\": \"true\" \"or\" \"false\",\n      \"maxDimension\": \"1024\",\n      \"aggression\": \"7\"\n    }",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "name",
            "description": "product's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationUuid",
            "description": "organization's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonProductCreateAndSendForReviewRequest"
            }
          },
          {
            "in": "body",
            "name": "reviewers",
            "description": "Array of reviewers emails",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "tagsUuids",
            "description": "list of tags' uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductCreateAndSendForReviewResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProductCreateAndSendForReviewResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ProductCreateAndSendForReviewResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ProductCreateAndSendForReviewResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/delete": {
      "delete": {
        "tags": [
          "Operations about products"
        ],
        "summary": "Delete products",
        "operationId": "deleteUsingDELETE_4",
        "produces": [
          "*/*",
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonProductDeleteRequest"
            }
          },
          {
            "name": "uuids",
            "description": "list of product's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductDeleteResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ProductDeleteResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ProductDeleteResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/hard-delete": {
      "delete": {
        "tags": [
          "Operations about products"
        ],
        "summary": "Permanently delete product",
        "operationId": "hardDeleteUsingDELETE",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonProductHardDeleteRequest"
            }
          },
          {
            "name": "uuid",
            "description": "product's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductHardDeleteResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProductGetResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ProductDeleteResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ProductDeleteResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/publish-to-facebook": {
      "post": {
        "tags": [
          "Operations about products"
        ],
        "summary": "publishToFacebook",
        "operationId": "publishToFacebookUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductPublishToFacebookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductPublishToFacebookResultResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/reconvert": {
      "put": {
        "tags": [
          "Operations about products"
        ],
        "summary": "Send product to reconversion",
        "operationId": "reconvertUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductUpdateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProductUpdateResultResponseNotFound"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/status": {
      "put": {
        "tags": [
          "Operations about products"
        ],
        "summary": "Update products statuses",
        "operationId": "updateStatusUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonProductStatusUpdateRequest"
            }
          },
          {
            "name": "status",
            "description": "product's status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "DRAFT",
                "LIVE"
              ]
            }
          },
          {
            "name": "uuid",
            "description": "product's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductStatusUpdateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProductStatusUpdateResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ProductStatusUpdateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ProductStatusUpdateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/status/approve": {
      "put": {
        "tags": [
          "Operations about products"
        ],
        "summary": "Update products status to approved",
        "operationId": "updateStatusToApprovedUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "productUuid",
            "description": "product's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonProductUuidAwareRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductUpdateStatusToApprovedResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProductUpdateStatusToApprovedResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ProductUpdateStatusToApprovedResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ProductUpdateStatusToApprovedResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/status/reject": {
      "put": {
        "tags": [
          "Operations about products"
        ],
        "summary": "Update products status to rejected",
        "operationId": "updateStatusToRejectedUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "productUuid",
            "description": "product's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonProductUuidAwareRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductUpdateStatusToRejectedResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProductUpdateStatusToRejectedResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ProductUpdateStatusToRejectedResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ProductUpdateStatusToRejectedResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/status/send-for-review": {
      "put": {
        "tags": [
          "Operations about products"
        ],
        "summary": "Update products status to waiting review",
        "operationId": "updateStatusToWaitingReviewUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "productUuid",
            "description": "product's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonProductStatusUpdateToWaitingReviewRequest"
            }
          },
          {
            "name": "reviewers",
            "description": "reviewers list",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductStatusUpdateStatusToWaitingReviewResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProductStatusUpdateStatusToWaitingReviewResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ProductStatusUpdateStatusToWaitingReviewResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ProductStatusUpdateStatusToWaitingReviewResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/update/send-for-review": {
      "put": {
        "tags": [
          "Operations about products"
        ],
        "summary": "Update product",
        "operationId": "updateAndSendForReviewUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "attributes",
            "description": "product's attributes map",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "autoPublish",
            "description": "product's auto-publish",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deleteAsset",
            "description": "product's delete asset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "description": "product's description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationsUuids",
            "description": "list of locations' uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelOpsParameters",
            "description": "    \n    \"DRACO_COMPRESSION\": {\n      \"enabled\": \"true\" \"or\" \"false\",\n    },\n    \"OPTIMIZATION\": {\n      \"desiredOutput\": \"AUTO\",\n      \"obstructedGeometry\": \"true\" \"or\" \"false\",\n      \"poly\": \"1000\"\n    },\n    \"TEXTURE_COMPRESSION\": {\n      \"lossless\": \"true\" \"or\" \"false\",\n      \"maxDimension\": \"1024\",\n      \"aggression\": \"7\"\n    }",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "product's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonProductUpdateAndSendForReviewRequest"
            }
          },
          {
            "in": "body",
            "name": "reviewers",
            "description": "Array of reviewers emails",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagsUuids",
            "description": "list of tags' uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "description": "product's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductCreateAndSendForReviewResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProductUpdateAndSendForReviewResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ProductUpdateAndSendForReviewResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ProductUpdateAndSendForReviewResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/{productUuid}/clients/{clientUuid}/thumbnails/{thumbnailBlobId}": {
      "get": {
        "tags": [
          "Operations about products"
        ],
        "summary": "Load product thumbnail through image resizing",
        "operationId": "loadProductThumbnailResourceUsingGET",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "path",
            "description": "clientUuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "height",
            "in": "query",
            "description": "height",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productUuid",
            "in": "path",
            "description": "productUuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "thumbnailBlobId",
            "in": "path",
            "description": "thumbnailBlobId",
            "required": true,
            "type": "string"
          },
          {
            "name": "width",
            "in": "query",
            "description": "width",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/{productUuid}/download/asset/{blobId}": {
      "get": {
        "tags": [
          "Operations about products"
        ],
        "summary": "resumableLoadProductAssetOriginalResource",
        "operationId": "resumableLoadProductAssetOriginalResourceUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "blobId",
            "in": "path",
            "description": "blobId",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "description": "clientUuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "productUuid",
            "in": "path",
            "description": "productUuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/{productUuid}/download/asset": {
      "get": {
        "tags": [
          "Operations about products"
        ],
        "summary": "loadProductAssetOriginalResource",
        "operationId": "loadProductAssetOriginalResourceUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "description": "clientUuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "productUuid",
            "in": "path",
            "description": "productUuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/{productUuid}/download/model": {
      "get": {
        "tags": [
          "Operations about products"
        ],
        "summary": "loadProductAssetModelResource",
        "operationId": "loadProductAssetModelResourceUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "description": "clientUuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "conversionFormat",
            "in": "query",
            "description": "conversionFormat",
            "required": true,
            "type": "string",
            "enum": [
              "GLB",
              "USDZ"
            ]
          },
          {
            "name": "productUuid",
            "in": "path",
            "description": "productUuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/v1/products/{uuid}": {
      "get": {
        "tags": [
          "Operations about products"
        ],
        "summary": "Get product by uuid",
        "operationId": "getByUuidUsingGET_4",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductGetResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProductGetResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ProductGetResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/showrooms": {
      "post": {
        "tags": [
          "Operations about showrooms"
        ],
        "summary": "Create a new showroom",
        "operationId": "createUsingPOST_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "showroom's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productsUuids",
            "description": "showroom's included products uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonCreateShowroomRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ShowroomCreateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ShowroomCreateResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ShowroomCreateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ShowroomCreateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Operations about showrooms"
        ],
        "summary": "Update a showroom",
        "operationId": "updateUsingPUT_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "showroom's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productsUuids",
            "description": "showroom's included products uuids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateShowroomRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ShowroomUpdateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ShowroomUpdateResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ShowroomUpdateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ShowroomUpdateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Operations about showrooms"
        ],
        "summary": "Delete a showroom",
        "operationId": "deleteUsingDELETE_5",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteShowroomRequestModel"
            }
          },
          {
            "name": "uuid",
            "description": "showroom's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ShowroomDeleteResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ShowroomDeleteResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ShowroomDeleteResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/showrooms/bulk": {
      "delete": {
        "tags": [
          "Operations about showrooms"
        ],
        "summary": "Bulk delete showrooms",
        "operationId": "bulkDeleteUsingDELETE",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuids",
            "in": "query",
            "description": "showroom's uuids",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ShowroomBulkDeleteResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ShowroomBulkDeleteResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ShowroomBulkDeleteResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/showrooms/get-by-uuid": {
      "post": {
        "tags": [
          "Operations about showrooms"
        ],
        "summary": "Get showroom by uuid",
        "operationId": "getByUuidUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShowroomDetailsRequestModel"
            }
          },
          {
            "name": "uuid",
            "description": "showroom's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ShowroomGetByUuidResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ShowroomGetByUuidResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ShowroomGetByUuidResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/showrooms/search": {
      "post": {
        "tags": [
          "Operations about showrooms"
        ],
        "summary": "Search showrooms",
        "operationId": "searchUsingPOST_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminFindShowroomByFilterRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ShowroomSearchResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ShowroomSearchResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/storage/load/asset/model": {
      "get": {
        "tags": [
          "Operations about files load/download"
        ],
        "summary": "Download asset model",
        "operationId": "loadClientResourceAssetModelUsingGET",
        "produces": [
          "*/*",
          "application/octet-stream",
          "model/gltf-binary",
          "model/vnd.usdz+zip"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "blobId",
            "in": "query",
            "description": "blobId",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "description": "clientUuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "headers": {
              "ERRORS": {
                "type": "string",
                "description": "BLOB_NOT_FOUND"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/storage/load/asset/optimized": {
      "get": {
        "tags": [
          "Operations about files load/download"
        ],
        "summary": "Download optimized asset",
        "operationId": "loadClientResourceAssetOptimizedAssetUsingGET",
        "produces": [
          "*/*",
          "application/octet-stream",
          "model/gltf-binary",
          "model/vnd.usdz+zip"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "blobId",
            "in": "query",
            "description": "blobId",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "description": "clientUuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "headers": {
              "ERRORS": {
                "type": "string",
                "description": "BLOB_NOT_FOUND"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/storage/load/asset/thumbnail": {
      "get": {
        "tags": [
          "Operations about files load/download"
        ],
        "summary": "Download asset thumbnail",
        "operationId": "loadClientResourceAssetThumbnailUsingGET",
        "produces": [
          "*/*",
          "image/png",
          "image/jpeg",
          "image/tiff",
          "image/bmp",
          "image/gif",
          "image/svg",
          "image/jpg"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "blobId",
            "in": "query",
            "description": "blobId",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "description": "clientUuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "headers": {
              "ERRORS": {
                "type": "string",
                "description": "BLOB_NOT_FOUND"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/storage/upload/clients/products/asset/batch-sign-urls": {
      "post": {
        "tags": [
          "Operations about files upload"
        ],
        "summary": "Create asset batch upload sign url sessions",
        "description": "returns location URI for the requested uuid and file parameters where the same file should be uploaded by using resumable upload protocol, for more information about resumable upload go to [Google Resumable uploads documentation.](https://cloud.google.com/storage/docs/resumable-uploads)",
        "operationId": "createClientProductAssetBatchUploadSignUrlSessionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "description": "client's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productName",
            "description": "product's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonGCloudStorageGetBatchSignUrlRequest"
            }
          },
          {
            "name": "resourceSettings",
            "description": "resource's settings original name, original size, content type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceCreateBatchSignUrlSessionResponseOk"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceCreateBatchSignUrlSessionResponseBadRequest"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceCreateBatchSignUrlSessionResponseForbidden"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceCreateBatchSignUrlSessionResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceCreateBatchSignUrlSessionResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/storage/upload/clients/products/asset/sign-url": {
      "post": {
        "tags": [
          "Operations about files upload"
        ],
        "summary": "Create asset upload sign url session",
        "description": "returns location URI for the requested uuid and file parameters where the same file should be uploaded by using resumable upload protocol,for more information about resumable upload go to [Google Resumable uploads documentation.](https://cloud.google.com/storage/docs/resumable-uploads)",
        "operationId": "createClientProductAssetUploadSignUrlSessionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "description": "client's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productUuid",
            "description": "product's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonGCloudStorageProductAssetUploadSignUrlSessionRequest"
            }
          },
          {
            "name": "resourceSettings",
            "description": "resource's settings original name, original size, content type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceCreateSignUrlSessionResponseOk"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceCreateSignUrlSessionResponseBadRequest"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceCreateSignUrlSessionResponseForbidden"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceCreateSignUrlSessionResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceCreateSignUrlSessionResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/storage/upload/clients/products/generation-request/sign-url": {
      "post": {
        "tags": [
          "Operations about files upload"
        ],
        "summary": "Create product generation request upload sign url session",
        "description": "returns location URI for the requested uuid and file parameters where the same file should be uploaded by using resumable upload protocol,for more information about resumable upload go to [Google Resumable uploads documentation.](https://cloud.google.com/storage/docs/resumable-uploads)",
        "operationId": "createClientProductGenerationRequestUploadSignUrlSessionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "description": "client's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productUuid",
            "description": "product's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminCommonGCloudStorageProductGenerationRequestUploadSignUrlSessionRequest"
            }
          },
          {
            "name": "resourceSettings",
            "description": "resource's settings original name, original size, content type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceCreateSignUrlSessionResponseOk"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceCreateSignUrlSessionResponseBadRequest"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceCreateSignUrlSessionResponseForbidden"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceCreateSignUrlSessionResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/GCloudStorageResourceCreateSignUrlSessionResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/tag-groups/clients/{clientUuid}": {
      "get": {
        "tags": [
          "Operations about tag groups"
        ],
        "summary": "Retrieve tag groups for client",
        "operationId": "getByClientUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "1",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "x-example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "30",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "x-example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagGroupGetResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/tag-groups/create": {
      "post": {
        "tags": [
          "Operations about tag groups"
        ],
        "summary": "Create a new tag",
        "operationId": "createUsingPOST_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "description": "client's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "tag group's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagGroupCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagGroupCreateResultResponseModelOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/TagGroupCreateResultResponseModelConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/TagGroupCreateResultResponseModelUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/tag-groups/delete": {
      "delete": {
        "tags": [
          "Operations about tag groups"
        ],
        "summary": "Delete tag groups",
        "operationId": "deleteUsingDELETE_6",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagGroupDeleteRequest"
            }
          },
          {
            "name": "tagGroupUuids",
            "description": "list of tag group's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagGroupDeleteResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/TagGroupDeleteResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/TagGroupDeleteResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/tag-groups/generate": {
      "post": {
        "tags": [
          "Operations about tag groups"
        ],
        "summary": "Generate tag group name",
        "operationId": "generateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "description": "client's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateTagGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenerateTagGroupResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/GenerateTagGroupResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/tag-groups/update": {
      "put": {
        "tags": [
          "Operations about tag groups"
        ],
        "summary": "Create a new tag",
        "operationId": "updateUsingPUT_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "tag group's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagGroupUpdateRequest"
            }
          },
          {
            "name": "uuid",
            "description": "tag group's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagGroupUpdateResultResponseModelOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/TagGroupUpdateResultResponseModelNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/TagGroupUpdateResultResponseModelConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/TagGroupUpdateResultResponseModelUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/tags/check-usages": {
      "post": {
        "tags": [
          "Operations about tags"
        ],
        "summary": "Check the usage of tags",
        "description": "returns true if any of tags is used in locations or in products",
        "operationId": "checkUsagesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "uuids",
            "description": "uuids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagUsedResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/TagUsedResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/tags/clients/search": {
      "post": {
        "tags": [
          "Operations about tags"
        ],
        "summary": "Search tags in many clients",
        "operationId": "searchInManyClientsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuids",
            "description": "clients uuids",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "the page number of result set",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminSearchTagInManyClientsRequestModel"
            }
          },
          {
            "name": "searchTerm",
            "description": "Search term",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "the page size of result set",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchTagSearchAdminResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/tags/create": {
      "post": {
        "tags": [
          "Operations about tags"
        ],
        "summary": "Create a new tag",
        "operationId": "createUsingPOST_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "description": "client's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "tag's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagCreateRequestModel"
            }
          },
          {
            "name": "tagGroupUuid",
            "description": "tag group's uuid",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagCreateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/TagCreateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/TagCreateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/tags/groups/{uuid}": {
      "get": {
        "tags": [
          "Operations about tags"
        ],
        "summary": "Retrieve tags by tag group",
        "operationId": "getByTagGroupUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagGetByTagGroupResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/tags/search": {
      "post": {
        "tags": [
          "Operations about tags"
        ],
        "summary": "Search tags",
        "operationId": "searchUsingPOST_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "description": "logged in client's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "the page number of result set",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminSearchTagInOneClientRequestModel"
            }
          },
          {
            "name": "searchTerm",
            "description": "Search term",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "the page size of result set",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchTagSearchAdminResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/tags/update": {
      "post": {
        "tags": [
          "Operations about tags"
        ],
        "summary": "Update the tag",
        "operationId": "updateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "tag's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagUpdateRequestModel"
            }
          },
          {
            "name": "tagGroupUuid",
            "description": "tag group's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "description": "tags's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagUpdateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/TagUpdateResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/TagUpdateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/TagUpdateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/tags/{uuid}": {
      "delete": {
        "tags": [
          "Operations about tags"
        ],
        "summary": "Delete the tag",
        "operationId": "deleteUsingDELETE_7",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagDeleteResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/TagDeleteResultResponseNotFound"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/users": {
      "get": {
        "tags": [
          "Operations about users"
        ],
        "summary": "Get users list in organization",
        "operationId": "getUsersInsideCurrentOrganizationUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetUsersByOrganizationResponse"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/v1/variant-groups": {
      "post": {
        "tags": [
          "Operations about variant groups"
        ],
        "summary": "Create a new variant group",
        "operationId": "createUsingPOST_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "variant group's description",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "variant group's name",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "productsUuids",
            "in": "query",
            "description": "variant group's included products uuids",
            "required": false,
            "type": "string"
          },
          {
            "name": "tagsUuids",
            "in": "query",
            "description": "variant group's included tags uuids",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VariantGroupCreateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/VariantGroupCreateResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/VariantGroupCreateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/VariantGroupCreateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Operations about variant groups"
        ],
        "summary": "Update a variant group",
        "operationId": "updateUsingPUT_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "variant group's description",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "variant group's name",
            "required": false,
            "type": "string"
          },
          {
            "name": "productsUuids",
            "in": "query",
            "description": "variant group's included products uuids",
            "required": false,
            "type": "string"
          },
          {
            "name": "tagsUuids",
            "in": "query",
            "description": "variant group's included tags uuids",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "variant group's uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VariantGroupUpdateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/VariantGroupUpdateResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/VariantGroupUpdateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/VariantGroupUpdateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Operations about variant groups"
        ],
        "summary": "Delete variant group",
        "operationId": "deleteUsingDELETE_8",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuids",
            "in": "query",
            "description": "variant group's uuids",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VariantGroupDeleteResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/VariantGroupDeleteResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/VariantGroupDeleteResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/variant-groups/add-products": {
      "put": {
        "tags": [
          "Operations about variant groups"
        ],
        "summary": "Add products to the variant group",
        "operationId": "addProductsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "productsUuids",
            "in": "query",
            "description": "variant group's included products uuids",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "variant group's uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VariantGroupAddProductsResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/VariantGroupUpdateResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/VariantGroupUpdateResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/VariantGroupUpdateResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/variant-groups/search": {
      "post": {
        "tags": [
          "Operations about variant groups"
        ],
        "summary": "Search variant groups by filter",
        "operationId": "searchUsingPOST_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "description": "variant group's client uuid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientUuids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationUuid",
            "in": "query",
            "description": "variant group's organization uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "1",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "x-example": 1
          },
          {
            "name": "productName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "productsUuids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "searchTerm",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "30",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "x-example": 1
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "DRAFT",
                "LIVE"
              ]
            },
            "collectionFormat": "multi",
            "enum": [
              "DRAFT",
              "LIVE"
            ]
          },
          {
            "name": "tagName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tagsUuids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VariantGroupSearchResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/VariantGroupSearchResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/VariantGroupSearchResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/variant-groups/update-status": {
      "put": {
        "tags": [
          "Operations about variant groups"
        ],
        "summary": "Update a variant group status",
        "operationId": "updateStatusUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "variant group's status",
            "required": true,
            "type": "string",
            "enum": [
              "LIVE",
              "DRAFT"
            ]
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "variant group's uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VariantGroupUpdateStatusResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/VariantGroupUpdateStatusResultResponseNotFound"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/VariantGroupUpdateStatusResultResponseConflict"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/VariantGroupUpdateStatusResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/variant-groups/{uuid}": {
      "get": {
        "tags": [
          "Operations about variant groups"
        ],
        "summary": "Get variant group by uuid",
        "operationId": "getByUuidUsingGET_5",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "variant group's uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VariantGroupCreateResultResponseOk"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/VariantGroupGetByUuidResultResponseNotFound"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/VariantGroupGetByUuidResultResponseUnprocessable"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/variant-groups/{uuid}/thumbnail": {
      "get": {
        "tags": [
          "Operations about variant groups"
        ],
        "summary": "Load variant groups thumbnail",
        "operationId": "loadThumbnailUsingGET",
        "produces": [
          "*/*",
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "description": "Organization specific token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientUuid",
            "description": "variant group's client uuid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationUuid",
            "description": "variant group's organization uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "headers": {
              "ERRORS": {
                "type": "string",
                "description": "BLOB_NOT_FOUND"
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "AbstractUuidAwareResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "AbstractUuidAwareResponseModel"
    },
    "AcceptAndSignUpInvitationOrganizationRequest": {
      "type": "object",
      "properties": {
        "organizationName": {
          "type": "string"
        },
        "organizationSlug": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "userFullName": {
          "type": "string"
        },
        "userPassword": {
          "type": "string"
        }
      },
      "title": "AcceptAndSignUpInvitationOrganizationRequest"
    },
    "AcceptInvitationOrganizationRequest": {
      "type": "object",
      "properties": {
        "organizationName": {
          "type": "string"
        },
        "organizationSlug": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "title": "AcceptInvitationOrganizationRequest"
    },
    "AcceptInvitationOrganizationResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_TOKEN",
              "MISSING_OWNER_FULL_NAME",
              "MISSING_EMAIL",
              "MISSING_ORGANIZATION_NAME",
              "MISSING_ORGANIZATION_SLUG",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_SLUG",
              "MISSING_CUSTOMER_SUBSCRIPTION_DEFINITION_UUID",
              "MISSING_INVITATION_STATUS",
              "INVALID_SLUG",
              "INVALID_TOKEN",
              "SLUG_IS_NOT_AVAILABLE",
              "NOT_FOUND",
              "TOKEN_NOT_FOUND",
              "ALREADY_REJECTED_INVITATION",
              "ALREADY_ACCEPTED_INVITATION",
              "MISSING_USER_UUID",
              "USER_NOT_FOUND",
              "TOKEN_IS_EXPIRED",
              "MISSING_USER_FULL_NAME",
              "MISSING_USER_PASSWORD",
              "USER_ALREADY_EXISTS_FOR_EMAIL"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/AbstractUuidAwareResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AcceptInvitationOrganizationResponse"
    },
    "AcceptInvitationUserAndSignUpRequest": {
      "type": "object",
      "properties": {
        "newUserFullName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "title": "AcceptInvitationUserAndSignUpRequest"
    },
    "AcceptInvitationUserRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "title": "AcceptInvitationUserRequest"
    },
    "AcceptInvitationUserToClientResponseModel": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        },
        "organizationUuid": {
          "type": "string"
        },
        "userRole": {
          "type": "string",
          "enum": [
            "SUPER_ADMIN",
            "ORGANIZATION_OWNER",
            "ORGANIZATION_ADMIN",
            "ORGANIZATION_CLIENT_MEMBER",
            "CLIENT_ORGANIZATION_ADMIN",
            "CLIENT_ORGANIZATION_CONTENT_MANAGER",
            "CLIENT_ORGANIZATION_VIEWER"
          ]
        },
        "userUuid": {
          "type": "string"
        }
      },
      "title": "AcceptInvitationUserToClientResponseModel"
    },
    "AcceptInvitationUserToClientResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_USER_ROLE",
              "MISSING_INVITED_USER_EMAIL",
              "MISSING_INVITER_USER_UUID",
              "MISSING_INVITING_ORGANIZATION_UUID",
              "MISSING_INVITING_ORGANIZATION_NAME",
              "MISSING_USER_FULL_NAME",
              "MISSING_PASSWORD",
              "TOKEN_IS_EXPIRED",
              "MISSING_INVITATION_STATUS",
              "MISSING_UUID",
              "MISSING_INVITATION_TOKEN",
              "MISSING_INVITATION_TOKENS",
              "INVITATION_NOT_FOUND",
              "INVITER_USER_NOT_FOUND",
              "INVITED_USER_ROLE_COULD_NOT_BE_ORGANIZATION_OWNER",
              "INVITING_ORGANIZATION_NOT_FOUND",
              "USER_ALREADY_PART_OF_ORGANIZATION",
              "INVALID_INVITATION_TOKEN",
              "NOT_FOUND_FOR_TOKEN",
              "USER_ALREADY_HAS_ROLE_IN_ORGANIZATION",
              "USER_ALREADY_EXISTS",
              "MISSING_INVITATIONS",
              "USER_ALREADY_HAS_ROLE_IN_CLIENT",
              "INCORRECT_PERMISSIONS"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/AcceptInvitationUserToClientResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AcceptInvitationUserToClientResultResponse"
    },
    "AcceptInvitationUserToOrganizationResponseModel": {
      "type": "object",
      "properties": {
        "organizationUuid": {
          "type": "string"
        },
        "userRole": {
          "type": "string",
          "enum": [
            "SUPER_ADMIN",
            "ORGANIZATION_OWNER",
            "ORGANIZATION_ADMIN",
            "ORGANIZATION_CLIENT_MEMBER",
            "CLIENT_ORGANIZATION_ADMIN",
            "CLIENT_ORGANIZATION_CONTENT_MANAGER",
            "CLIENT_ORGANIZATION_VIEWER"
          ]
        },
        "userUuid": {
          "type": "string"
        }
      },
      "title": "AcceptInvitationUserToOrganizationResponseModel"
    },
    "AcceptInvitationUserToOrganizationResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_USER_ROLE",
              "MISSING_INVITED_USER_EMAIL",
              "MISSING_INVITER_USER_UUID",
              "MISSING_INVITING_ORGANIZATION_UUID",
              "MISSING_INVITING_ORGANIZATION_NAME",
              "MISSING_USER_FULL_NAME",
              "MISSING_PASSWORD",
              "TOKEN_IS_EXPIRED",
              "MISSING_INVITATION_STATUS",
              "MISSING_UUID",
              "MISSING_INVITATION_TOKEN",
              "MISSING_INVITATION_TOKENS",
              "INVITATION_NOT_FOUND",
              "INVITER_USER_NOT_FOUND",
              "INVITED_USER_ROLE_COULD_NOT_BE_ORGANIZATION_OWNER",
              "INVITING_ORGANIZATION_NOT_FOUND",
              "USER_ALREADY_PART_OF_ORGANIZATION",
              "INVALID_INVITATION_TOKEN",
              "NOT_FOUND_FOR_TOKEN",
              "USER_ALREADY_HAS_ROLE_IN_ORGANIZATION",
              "USER_ALREADY_EXISTS",
              "MISSING_INVITATIONS",
              "USER_ALREADY_HAS_ROLE_IN_CLIENT",
              "INCORRECT_PERMISSIONS"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/AcceptInvitationUserToOrganizationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AcceptInvitationUserToOrganizationResultResponse"
    },
    "AddProductsToVariantGroupsResponseModel": {
      "type": "object",
      "properties": {
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "AddProductsToVariantGroupsResponseModel"
    },
    "AddProductsToVariantGroupsResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_ORGANIZATION_OR_CLIENT_UUID",
              "MISSING_NAME",
              "MISSING_PRODUCTS_UUIDS",
              "VARIANT_GROUP_NOT_FOUND",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_STATUS",
              "INVALID_PRODUCTS_SIZE",
              "INVALID_PRODUCT_UUID",
              "PRODUCT_NOT_FOUND",
              "HAS_NOT_LIVE_PRODUCT",
              "VARIANT_GROUP_ALREADY_HAS_THE_SAME_STATUS",
              "TAG_NOT_FOUND",
              "ORGANIZATION_NOT_FOUND",
              "CLIENT_ORGANIZATION_NOT_FOUND",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION_OR_CLIENT"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/AddProductsToVariantGroupsResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AddProductsToVariantGroupsResultResponse"
    },
    "AdminCommonAnnotationViewResponseModel": {
      "type": "object",
      "properties": {
        "annotations": {
          "$ref": "#/definitions/AnnotationGridResponseModel"
        },
        "mentions": {
          "$ref": "#/definitions/GetUsersByUuidsAndOrganizationUuidGridResponseModel"
        }
      },
      "title": "AdminCommonAnnotationViewResponseModel"
    },
    "AdminCommonAnnotationViewResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DynamicErrorResponseModel"
          }
        },
        "response": {
          "$ref": "#/definitions/AdminCommonAnnotationViewResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AdminCommonAnnotationViewResultResponse"
    },
    "AdminCommonCommentViewResponseModel": {
      "type": "object",
      "properties": {
        "comments": {
          "$ref": "#/definitions/CommentGridResponseModel"
        },
        "mentions": {
          "$ref": "#/definitions/GetUsersByUuidsAndOrganizationUuidGridResponseModel"
        }
      },
      "title": "AdminCommonCommentViewResponseModel"
    },
    "AdminCommonCommentViewResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DynamicErrorResponseModel"
          }
        },
        "response": {
          "$ref": "#/definitions/AdminCommonCommentViewResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AdminCommonCommentViewResultResponse"
    },
    "AdminCommonCreateAnnotationRequestModel": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminProductAttachmentRequestModel"
          }
        },
        "clientUuid": {
          "type": "string"
        },
        "dimensions": {
          "type": "string"
        },
        "productUuid": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      },
      "title": "AdminCommonCreateAnnotationRequestModel"
    },
    "AdminCommonCreateAnnotationResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "AdminCommonCreateAnnotationResponseModel"
    },
    "AdminCommonCreateAnnotationResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DynamicErrorResponseModel"
          }
        },
        "response": {
          "$ref": "#/definitions/AdminCommonCreateAnnotationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AdminCommonCreateAnnotationResultResponse"
    },
    "AdminCommonCreateCommentResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "AdminCommonCreateCommentResponseModel"
    },
    "AdminCommonCreateCommentResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DynamicErrorResponseModel"
          }
        },
        "response": {
          "$ref": "#/definitions/AdminCommonCreateCommentResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AdminCommonCreateCommentResultResponse"
    },
    "AdminCommonCreateProductCommentRequestModel": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminProductAttachmentRequestModel"
          }
        },
        "clientUuid": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "ANNOTATION",
            "PRODUCT",
            "VARIANT_GROUP"
          ]
        },
        "entityUuid": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "AdminCommonCreateProductCommentRequestModel"
    },
    "AdminCommonCreateShowroomRequestModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "productsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "AdminCommonCreateShowroomRequestModel"
    },
    "AdminCommonDeleteAnnotationRequestModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "AdminCommonDeleteAnnotationRequestModel"
    },
    "AdminCommonDeleteCommentRequestModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "AdminCommonDeleteCommentRequestModel"
    },
    "AdminCommonFindAnnotationByFilterRequestModel": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "1",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "productUuid": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "30",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "AdminCommonFindAnnotationByFilterRequestModel"
    },
    "AdminCommonFindCommentByFilterRequestModel": {
      "type": "object",
      "properties": {
        "entityType": {
          "type": "string",
          "enum": [
            "ANNOTATION",
            "PRODUCT",
            "VARIANT_GROUP"
          ]
        },
        "entityUuid": {
          "type": "string"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "1",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "30",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "AdminCommonFindCommentByFilterRequestModel"
    },
    "AdminCommonGCloudStorageGetBatchSignUrlRequest": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminCommonGCloudStorageGetBatchSignUrlRequestItem"
          }
        }
      },
      "title": "AdminCommonGCloudStorageGetBatchSignUrlRequest"
    },
    "AdminCommonGCloudStorageGetBatchSignUrlRequestItem": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string"
        },
        "requestUuid": {
          "type": "string"
        },
        "resourceSettings": {
          "$ref": "#/definitions/AdminCommonGCloudStorageResourceSettingsModel"
        }
      },
      "title": "AdminCommonGCloudStorageGetBatchSignUrlRequestItem"
    },
    "AdminCommonGCloudStorageProductAssetUploadSignUrlSessionRequest": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        },
        "productUuid": {
          "type": "string"
        },
        "requestUuid": {
          "type": "string"
        },
        "resourceSettings": {
          "$ref": "#/definitions/AdminCommonGCloudStorageResourceSettingsModel"
        }
      },
      "title": "AdminCommonGCloudStorageProductAssetUploadSignUrlSessionRequest"
    },
    "AdminCommonGCloudStorageProductGenerationRequestUploadSignUrlSessionRequest": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        },
        "productGenerationRequestUuid": {
          "type": "string"
        },
        "requestUuid": {
          "type": "string"
        },
        "resourceSettings": {
          "$ref": "#/definitions/AdminCommonGCloudStorageResourceSettingsModel"
        }
      },
      "title": "AdminCommonGCloudStorageProductGenerationRequestUploadSignUrlSessionRequest"
    },
    "AdminCommonGCloudStorageResourceSettingsModel": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "originalName": {
          "type": "string"
        },
        "originalSize": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "AdminCommonGCloudStorageResourceSettingsModel"
    },
    "AdminCommonModelOpsPipelineResponseModel": {
      "type": "object",
      "properties": {
        "pipeline": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "AdminCommonModelOpsPipelineResponseModel"
    },
    "AdminCommonModelOpsPipelineResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DynamicErrorResponseModel"
          }
        },
        "response": {
          "$ref": "#/definitions/AdminCommonModelOpsPipelineResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AdminCommonModelOpsPipelineResultResponse"
    },
    "AdminCommonModelOpsPipelinesResponseModel": {
      "type": "object",
      "properties": {
        "pipelines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Map«string,string»"
          }
        }
      },
      "title": "AdminCommonModelOpsPipelinesResponseModel"
    },
    "AdminCommonModelOpsPipelinesResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DynamicErrorResponseModel"
          }
        },
        "response": {
          "$ref": "#/definitions/AdminCommonModelOpsPipelinesResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AdminCommonModelOpsPipelinesResultResponse"
    },
    "AdminCommonProductCreateAndSendForReviewRequest": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "autoPublish": {
          "type": "boolean"
        },
        "clientUuid": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "locationsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modelOpsParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "name": {
          "type": "string"
        },
        "pipelineUuid": {
          "type": "string"
        },
        "presetUuid": {
          "type": "string"
        },
        "reviewers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tagsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "AdminCommonProductCreateAndSendForReviewRequest"
    },
    "AdminCommonProductCreateRequest": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "autoPublish": {
          "type": "boolean"
        },
        "clientUuid": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "locationsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modelOpsParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "name": {
          "type": "string"
        },
        "pipelineUuid": {
          "type": "string"
        },
        "presetUuid": {
          "type": "string"
        },
        "tagsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "AdminCommonProductCreateRequest"
    },
    "AdminCommonProductDeleteRequest": {
      "type": "object",
      "properties": {
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "AdminCommonProductDeleteRequest"
    },
    "AdminCommonProductHardDeleteRequest": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "AdminCommonProductHardDeleteRequest"
    },
    "AdminCommonProductStatusUpdateRequest": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayProductStatusUpdateRequestItem"
          }
        }
      },
      "title": "AdminCommonProductStatusUpdateRequest"
    },
    "AdminCommonProductStatusUpdateToWaitingReviewRequest": {
      "type": "object",
      "properties": {
        "productUuid": {
          "type": "string"
        },
        "productUuids": {
          "type": "string"
        },
        "reviewers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "AdminCommonProductStatusUpdateToWaitingReviewRequest"
    },
    "AdminCommonProductUpdateAndSendForReviewRequest": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "autoPublish": {
          "type": "boolean"
        },
        "clientUuid": {
          "type": "string"
        },
        "deleteAsset": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "locationsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modelOpsParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "name": {
          "type": "string"
        },
        "pipelineUuid": {
          "type": "string"
        },
        "presetUuid": {
          "type": "string"
        },
        "reviewers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tagsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "AdminCommonProductUpdateAndSendForReviewRequest"
    },
    "AdminCommonProductUpdateRequest": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "autoPublish": {
          "type": "boolean"
        },
        "clientUuid": {
          "type": "string"
        },
        "deleteAsset": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "locationsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modelOpsParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "name": {
          "type": "string"
        },
        "pipelineUuid": {
          "type": "string"
        },
        "presetUuid": {
          "type": "string"
        },
        "tagsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "AdminCommonProductUpdateRequest"
    },
    "AdminCommonProductUuidAwareRequest": {
      "type": "object",
      "properties": {
        "productUuid": {
          "type": "string"
        },
        "productUuids": {
          "type": "string"
        }
      },
      "title": "AdminCommonProductUuidAwareRequest"
    },
    "AdminCommonUpdateAnnotationRequestModel": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminProductAttachmentRequestModel"
          }
        },
        "clientUuid": {
          "type": "string"
        },
        "dimensions": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "AdminCommonUpdateAnnotationRequestModel"
    },
    "AdminCommonUpdateAnnotationResponseModel": {
      "type": "object",
      "properties": {
        "dimensions": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "AdminCommonUpdateAnnotationResponseModel"
    },
    "AdminCommonUpdateAnnotationResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DynamicErrorResponseModel"
          }
        },
        "response": {
          "$ref": "#/definitions/AdminCommonUpdateAnnotationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AdminCommonUpdateAnnotationResultResponse"
    },
    "AdminCommonUpdateCommentResponseModel": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "AdminCommonUpdateCommentResponseModel"
    },
    "AdminCommonUpdateCommentResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DynamicErrorResponseModel"
          }
        },
        "response": {
          "$ref": "#/definitions/AdminCommonUpdateCommentResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AdminCommonUpdateCommentResultResponse"
    },
    "AdminCommonUpdateProductCommentRequestModel": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminProductAttachmentRequestModel"
          }
        },
        "clientUuid": {
          "type": "string"
        },
        "entityUuid": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "AdminCommonUpdateProductCommentRequestModel"
    },
    "AdminCommonUploadProductAttachmentResponseModel": {
      "type": "object",
      "properties": {
        "blobId": {
          "type": "string"
        },
        "blobSize": {
          "type": "integer",
          "format": "int64"
        },
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "AdminCommonUploadProductAttachmentResponseModel"
    },
    "AdminCommonUploadProductAttachmentResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DynamicErrorResponseModel"
          }
        },
        "response": {
          "$ref": "#/definitions/AdminCommonUploadProductAttachmentResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AdminCommonUploadProductAttachmentResultResponse"
    },
    "AdminCreateInvitationUserForOrganizationRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "userRole": {
          "type": "string",
          "enum": [
            "ORGANIZATION_ADMIN",
            "CLIENT_ORGANIZATION_ADMIN",
            "CLIENT_ORGANIZATION_CONTENT_MANAGER",
            "CLIENT_ORGANIZATION_VIEWER"
          ]
        }
      },
      "title": "AdminCreateInvitationUserForOrganizationRequest"
    },
    "AdminCreateUserInvitationForOrganizationClientsRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "invitations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SingleUserInvitationForClientRequest"
          }
        }
      },
      "title": "AdminCreateUserInvitationForOrganizationClientsRequest"
    },
    "AdminFindShowroomByFilterRequestModel": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "1",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "30",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "AdminFindShowroomByFilterRequestModel"
    },
    "AdminGetAllByStatusInvitationUserRequest": {
      "type": "object",
      "title": "AdminGetAllByStatusInvitationUserRequest"
    },
    "AdminInvitationGetByTokenResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_TOKEN",
              "MISSING_OWNER_FULL_NAME",
              "MISSING_EMAIL",
              "MISSING_ORGANIZATION_NAME",
              "MISSING_SLUG",
              "MISSING_CUSTOMER_SUBSCRIPTION_DEFINITION_UUID",
              "INVALID_SLUG",
              "INVALID_TOKEN",
              "EXPIRED_TOKEN",
              "SLUG_IS_NOT_AVAILABLE",
              "NOT_FOUND",
              "MISSING_CLIENT_NAME",
              "MISSING_CLIENT_SLUG",
              "MISSING_FULL_NAME",
              "MISSING_PASSWORD",
              "MISSING_ORGANIZATION",
              "NOT_FOUND_FOR_EMAIL",
              "NOT_FOUND_FOR_ORGANIZATION",
              "NOT_FOUND_FOR_UUID",
              "NOT_FOUND_FOR_ROLE",
              "SIGN_UP_WITH_EXISTING_EMAIL",
              "INVALID_EMAIL_FORMAT",
              "USER_ALREADY_VERIFIED",
              "MISSING_VERIFICATION_TOKEN",
              "MISSING_RESET_PASSWORD_TOKEN",
              "INVALID_RESET_PASSWORD_TOKEN",
              "USER_NOT_FOUND",
              "PASSWORD_MISMATCH",
              "INVALID_VERIFICATION_TOKEN",
              "MISSING_NAME",
              "MISSING_PERIOD_TYPE",
              "MISSING_ORDER",
              "MISSING_HIGHLIGHTED",
              "MISSING_DESCRIPTION"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/AdminInvitationGetByTokenResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AdminInvitationGetByTokenResponse"
    },
    "AdminInvitationGetByTokenResponseModel": {
      "type": "object",
      "properties": {
        "cancelInNBilling": {
          "type": "integer",
          "format": "int32"
        },
        "customerSubscriptionDescription": {
          "type": "string"
        },
        "customerSubscriptionName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "freeProductsCount": {
          "type": "integer",
          "format": "int64"
        },
        "organizationName": {
          "type": "string"
        },
        "ownerFullName": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "prototypeUuid": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "INVITED",
            "REJECTED",
            "ACCEPTED"
          ]
        },
        "subscriptionPeriod": {
          "type": "string",
          "enum": [
            "MONTH",
            "YEAR"
          ]
        },
        "userExists": {
          "type": "boolean"
        }
      },
      "title": "AdminInvitationGetByTokenResponseModel"
    },
    "AdminProductAttachmentRequestModel": {
      "type": "object",
      "properties": {
        "blobId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "productUuid": {
          "type": "string"
        }
      },
      "title": "AdminProductAttachmentRequestModel"
    },
    "AdminProductCreationResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DynamicErrorResponseModel"
          }
        },
        "response": {
          "$ref": "#/definitions/ProductCreateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AdminProductCreationResponse"
    },
    "AdminProductUpdateResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DynamicErrorResponseModel"
          }
        },
        "response": {
          "$ref": "#/definitions/ProductUpdateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AdminProductUpdateResponse"
    },
    "AdminSearchTagInManyClientsRequestModel": {
      "type": "object",
      "properties": {
        "clientUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "1",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "searchTerm": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "30",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "AdminSearchTagInManyClientsRequestModel"
    },
    "AdminSearchTagInOneClientRequestModel": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "1",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "searchTerm": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "30",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "AdminSearchTagInOneClientRequestModel"
    },
    "AnnotationCreateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND",
              "NOT_FOUND_FOR_ORGANIZATION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AnnotationCreateResultResponseNotFound"
    },
    "AnnotationCreateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AdminCommonCreateAnnotationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AnnotationCreateResultResponseOk"
    },
    "AnnotationCreateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PRODUCT_UUID",
              "MISSING_DIMENSIONS",
              "MISSING_TEXT"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AnnotationCreateResultResponseUnprocessable"
    },
    "AnnotationDeleteResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "ANNOTATION_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AnnotationDeleteResultResponseConflict"
    },
    "AnnotationDeleteResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "ANNOTATION_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AnnotationDeleteResultResponseNotFound"
    },
    "AnnotationDeleteResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/DeleteAnnotationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AnnotationDeleteResultResponseOk"
    },
    "AnnotationDeleteResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AnnotationDeleteResultResponseUnprocessable"
    },
    "AnnotationGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnotationViewResponseModel"
          }
        },
        "nextNumber": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AnnotationGridResponseModel"
    },
    "AnnotationResolveResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "ANNOTATION_NOT_FOUND",
              "ALREADY_RESOLVED"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AnnotationResolveResultResponseConflict"
    },
    "AnnotationResolveResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "ANNOTATION_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AnnotationResolveResultResponseNotFound"
    },
    "AnnotationResolveResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/ResolveAnnotationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AnnotationResolveResultResponseOk"
    },
    "AnnotationResolveResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_RESOLVED"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AnnotationResolveResultResponseUnprocessable"
    },
    "AnnotationSearchResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_ORGANIZATION_UUID_NOT_MATCH"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AnnotationSearchResultResponseConflict"
    },
    "AnnotationSearchResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AnnotationSearchResultResponseNotFound"
    },
    "AnnotationSearchResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AdminCommonAnnotationViewResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AnnotationSearchResultResponseOk"
    },
    "AnnotationSearchResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_PRODUCT_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AnnotationSearchResultResponseUnprocessable"
    },
    "AnnotationUpdateResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "ALREADY_RESOLVED"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AnnotationUpdateResultResponseConflict"
    },
    "AnnotationUpdateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "ANNOTATION_NOT_FOUND",
              "NOT_FOUND_FOR_ORGANIZATION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AnnotationUpdateResultResponseNotFound"
    },
    "AnnotationUpdateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AdminCommonUpdateAnnotationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AnnotationUpdateResultResponseOk"
    },
    "AnnotationUpdateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_TEXT",
              "MISSING_DIMENSIONS"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AnnotationUpdateResultResponseUnprocessable"
    },
    "AnnotationViewResponseModel": {
      "type": "object",
      "properties": {
        "attachments": {
          "$ref": "#/definitions/AttachmentGridResponseModel"
        },
        "commentsCount": {
          "type": "integer",
          "format": "int32"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "dimensions": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "productUuid": {
          "type": "string"
        },
        "resolved": {
          "type": "boolean"
        },
        "text": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "userUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "AnnotationViewResponseModel"
    },
    "AssetModel": {
      "type": "object",
      "properties": {
        "assetBlobId": {
          "type": "string"
        },
        "assetOriginalName": {
          "type": "string"
        },
        "assetOriginalSize": {
          "type": "integer",
          "format": "int64"
        },
        "conversionFormats": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "GLB",
              "USDZ",
              "OPTIMIZED"
            ]
          }
        },
        "generationRequestUuid": {
          "type": "string"
        },
        "models": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model"
          }
        },
        "retry": {
          "type": "boolean"
        },
        "thumbnailBlobId": {
          "type": "string"
        }
      },
      "title": "AssetModel"
    },
    "AttachmentCreateResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "ATTACHMENTS_MAX_COUNT_OVERLOADED"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AttachmentCreateResultResponseConflict"
    },
    "AttachmentCreateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND",
              "ANNOTATION_NOT_FOUND",
              "COMMENT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AttachmentCreateResultResponseNotFound"
    },
    "AttachmentCreateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/CreateAttachmentResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AttachmentCreateResultResponseOk"
    },
    "AttachmentCreateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_BLOB_ID",
              "MISSING_PRODUCT_UUID",
              "MISSING_ENTITY_TYPE",
              "MISSING_ENTITY_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AttachmentCreateResultResponseUnprocessable"
    },
    "AttachmentDeleteResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "ATTACHMENT_NOT_FOUND",
              "PRODUCT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AttachmentDeleteResultResponseNotFound"
    },
    "AttachmentDeleteResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/DeleteAttachmentResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AttachmentDeleteResultResponseOk"
    },
    "AttachmentGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AttachmentGridResponseModel"
    },
    "AttachmentResponseModel": {
      "type": "object",
      "properties": {
        "blobId": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "COMMENT",
            "ANNOTATION",
            "PRODUCT",
            "ANNOTATION_COMMENT",
            "VARIANT_GROUP"
          ]
        },
        "entityUuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "PRODUCT",
            "VARIANT_GROUP"
          ]
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "AttachmentResponseModel"
    },
    "AttachmentSearchResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND",
              "ANNOTATION_NOT_FOUND",
              "COMMENT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AttachmentSearchResultResponseNotFound"
    },
    "AttachmentSearchResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/CreateAttachmentResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "AttachmentSearchResultResponseOk"
    },
    "AttachmentSearchResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_PRODUCT_UUID",
              "MISSING_ENTITY_TYPE",
              "MISSING_ENTITY_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "AttachmentSearchResultResponseUnprocessable"
    },
    "BulkDeleteShowroomResponseModel": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "BulkDeleteShowroomResponseModel"
    },
    "BulkDeleteShowroomResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_NAME",
              "MISSING_PRODUCT_UUIDS",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "INVALID_PRODUCTS_SIZE",
              "INVALID_PASSWORD",
              "INCORRECT_PASSWORD",
              "INVALID_PRODUCT_UUID",
              "SHOWROOM_NOT_FOUND",
              "PRODUCT_NOT_FOUND",
              "DUPLICATED_PRODUCTS_UUIDS",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/BulkDeleteShowroomResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "BulkDeleteShowroomResultResponse"
    },
    "CheckAvailableClientOrganizationSlugRequest": {
      "type": "object",
      "properties": {
        "organizationUuid": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      },
      "title": "CheckAvailableClientOrganizationSlugRequest"
    },
    "CheckAvailableClientOrganizationSlugResponseModel": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean"
        },
        "suggested": {
          "type": "string"
        }
      },
      "title": "CheckAvailableClientOrganizationSlugResponseModel"
    },
    "CheckAvailableClientOrganizationSlugResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_NAME",
              "MISSING_SLUG",
              "SLUG_ALREADY_EXISTS",
              "SLUG_NOT_VALID",
              "CLIENT_NOT_FOUND",
              "USER_NOT_FOUND",
              "ORGANIZATION_NOT_FOUND",
              "MISSING_USER_UUID"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/CheckAvailableClientOrganizationSlugResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "CheckAvailableClientOrganizationSlugResultResponse"
    },
    "CheckAvailableOrganizationSlugRequest": {
      "type": "object",
      "properties": {
        "slug": {
          "type": "string"
        }
      },
      "title": "CheckAvailableOrganizationSlugRequest"
    },
    "CheckAvailableOrganizationSlugResponseModel": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean"
        },
        "suggested": {
          "type": "string"
        }
      },
      "title": "CheckAvailableOrganizationSlugResponseModel"
    },
    "CheckAvailableOrganizationSlugResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_SLUG",
              "SLUG_ALREADY_EXISTS",
              "SLUG_NOT_VALID",
              "SLUG_NOT_FOUND",
              "MISSING_USER_UUID",
              "ORGANIZATION_NOT_FOUND",
              "MISSING_UUID",
              "USER_NOT_FOUND",
              "ORGANIZATION_INVITATION_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/CheckAvailableOrganizationSlugResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "CheckAvailableOrganizationSlugResultResponse"
    },
    "ClientCreateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_NAME",
              "MISSING_SLUG",
              "SLUG_ALREADY_EXISTS",
              "SLUG_NOT_VALID",
              "CLIENT_NOT_FOUND",
              "USER_NOT_FOUND",
              "ORGANIZATION_NOT_FOUND",
              "MISSING_USER_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ClientCreateResultResponseNotFound"
    },
    "ClientCreateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/CreateClientOrganizationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ClientCreateResultResponseOk"
    },
    "ClientCreateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "SLUG_NOT_VALID",
              "SLUG_ALREADY_EXISTS",
              "MISSING_NAME",
              "MISSING_SLUG"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ClientCreateResultResponseUnprocessable"
    },
    "ClientGetResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "CLIENT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ClientGetResultResponseNotFound"
    },
    "ClientGetResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/GetClientOrganizationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ClientGetResultResponseOk"
    },
    "ClientGetResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ClientGetResultResponseUnprocessable"
    },
    "ClientOrganizationResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/GetUserClientOrganizationsGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ClientOrganizationResultResponseOk"
    },
    "ClientOrganizationSlugAvailableResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/CheckAvailableClientOrganizationSlugResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ClientOrganizationSlugAvailableResultResponseOk"
    },
    "ClientOrganizationSlugAvailibilityResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "SLUG_NOT_VALID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ClientOrganizationSlugAvailibilityResultResponseUnprocessable"
    },
    "ClientUpdateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "CLIENT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ClientUpdateResultResponseNotFound"
    },
    "ClientUpdateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/CreateClientOrganizationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ClientUpdateResultResponseOk"
    },
    "ClientUpdateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ClientUpdateResultResponseUnprocessable"
    },
    "CommentCreateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND",
              "ANNOTATION_NOT_FOUND",
              "NOT_FOUND_FOR_ORGANIZATION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "CommentCreateResultResponseNotFound"
    },
    "CommentCreateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AdminCommonCreateCommentResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "CommentCreateResultResponseOk"
    },
    "CommentCreateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_ENTITY_TYPE",
              "MISSING_ENTITY_UUID",
              "MISSING_MESSAGE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "CommentCreateResultResponseUnprocessable"
    },
    "CommentDeleteResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "COMMENT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "CommentDeleteResultResponseNotFound"
    },
    "CommentDeleteResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/DeleteCommentResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "CommentDeleteResultResponseOk"
    },
    "CommentDeleteResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "CommentDeleteResultResponseUnprocessable"
    },
    "CommentGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommentViewResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "CommentGridResponseModel"
    },
    "CommentSearchResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_ORGANIZATION_UUID_NOT_MATCH"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "CommentSearchResultResponseConflict"
    },
    "CommentSearchResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "CommentSearchResultResponseNotFound"
    },
    "CommentSearchResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AdminCommonCommentViewResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "CommentSearchResultResponseOk"
    },
    "CommentSearchResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_ENTITY_TYPE",
              "MISSING_ENTITY_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "CommentSearchResultResponseUnprocessable"
    },
    "CommentUpdateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "COMMENT_NOT_FOUND",
              "ENTITY_NOT_FOUND",
              "NOT_FOUND_FOR_ORGANIZATION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "CommentUpdateResultResponseNotFound"
    },
    "CommentUpdateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AdminCommonUpdateCommentResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "CommentUpdateResultResponseOk"
    },
    "CommentUpdateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_ENTITY_UUID",
              "MISSING_MESSAGE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "CommentUpdateResultResponseUnprocessable"
    },
    "CommentViewResponseModel": {
      "type": "object",
      "properties": {
        "attachments": {
          "$ref": "#/definitions/AttachmentGridResponseModel"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "ANNOTATION",
            "PRODUCT",
            "VARIANT_GROUP"
          ]
        },
        "entityUuid": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "userUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "CommentViewResponseModel"
    },
    "ConversionErrorModel": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "ConversionErrorModel"
    },
    "CreateAttachmentResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "CreateAttachmentResponseModel"
    },
    "CreateAttachmentResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_NAME",
              "MISSING_BLOB_ID",
              "MISSING_ENTITY_TYPE",
              "MISSING_ENTITY_UUID",
              "MISSING_PRODUCT_UUID",
              "MISSING_PRODUCT_OR_VARIANT_GROUP_UUID",
              "MISSING_VARIANT_GROUP_UUID",
              "MISSING_ATTACHMENTS",
              "ATTACHMENTS_MAX_COUNT_OVERLOADED",
              "ATTACHMENT_NOT_FOUND",
              "NOT_PRODUCT_ATTACHMENT",
              "PRODUCT_NOT_FOUND",
              "VARIANT_GROUP_NOT_FOUND",
              "ANNOTATION_NOT_FOUND",
              "COMMENT_NOT_FOUND",
              "PRODUCT_NOT_MATCH"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/CreateAttachmentResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "CreateAttachmentResultResponse"
    },
    "CreateClientOrganizationRequest": {
      "type": "object",
      "properties": {
        "imageBlobId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organizationUuid": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      },
      "title": "CreateClientOrganizationRequest"
    },
    "CreateClientOrganizationResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "CreateClientOrganizationResponseModel"
    },
    "CreateClientOrganizationResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_NAME",
              "MISSING_SLUG",
              "SLUG_ALREADY_EXISTS",
              "SLUG_NOT_VALID",
              "CLIENT_NOT_FOUND",
              "USER_NOT_FOUND",
              "ORGANIZATION_NOT_FOUND",
              "MISSING_USER_UUID"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/CreateClientOrganizationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "CreateClientOrganizationResultResponse"
    },
    "CreateHotspotRequestModel": {
      "type": "object",
      "properties": {
        "dimensions": {
          "type": "string"
        },
        "productUuid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "TEXT",
            "IMAGE",
            "VIDEO"
          ]
        }
      },
      "title": "CreateHotspotRequestModel"
    },
    "CreateImageHotspotRequestModel": {
      "title": "CreateImageHotspotRequestModel",
      "allOf": [
        {
          "$ref": "#/definitions/CreateHotspotRequestModel"
        },
        {
          "type": "object",
          "properties": {
            "blobId": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "dimensions": {
              "type": "string"
            },
            "productUuid": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "TEXT",
                "IMAGE",
                "VIDEO"
              ]
            }
          },
          "title": "CreateImageHotspotRequestModel"
        }
      ]
    },
    "CreateInvitationUserForClientsResponseModel": {
      "type": "object",
      "properties": {
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "CreateInvitationUserForClientsResponseModel"
    },
    "CreateInvitationUserForOrganizationClientsResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_USER_ROLE",
              "MISSING_INVITED_USER_EMAIL",
              "MISSING_INVITER_USER_UUID",
              "MISSING_INVITING_ORGANIZATION_UUID",
              "MISSING_INVITING_ORGANIZATION_NAME",
              "MISSING_USER_FULL_NAME",
              "MISSING_PASSWORD",
              "TOKEN_IS_EXPIRED",
              "MISSING_INVITATION_STATUS",
              "MISSING_UUID",
              "MISSING_INVITATION_TOKEN",
              "MISSING_INVITATION_TOKENS",
              "INVITATION_NOT_FOUND",
              "INVITER_USER_NOT_FOUND",
              "INVITED_USER_ROLE_COULD_NOT_BE_ORGANIZATION_OWNER",
              "INVITING_ORGANIZATION_NOT_FOUND",
              "USER_ALREADY_PART_OF_ORGANIZATION",
              "INVALID_INVITATION_TOKEN",
              "NOT_FOUND_FOR_TOKEN",
              "USER_ALREADY_HAS_ROLE_IN_ORGANIZATION",
              "USER_ALREADY_EXISTS",
              "MISSING_INVITATIONS",
              "USER_ALREADY_HAS_ROLE_IN_CLIENT",
              "INCORRECT_PERMISSIONS"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/CreateInvitationUserForClientsResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "CreateInvitationUserForOrganizationClientsResultResponse"
    },
    "CreateInvitationUserForOrganizationResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_USER_ROLE",
              "MISSING_INVITED_USER_EMAIL",
              "MISSING_INVITER_USER_UUID",
              "MISSING_INVITING_ORGANIZATION_UUID",
              "MISSING_INVITING_ORGANIZATION_NAME",
              "MISSING_USER_FULL_NAME",
              "MISSING_PASSWORD",
              "TOKEN_IS_EXPIRED",
              "MISSING_INVITATION_STATUS",
              "MISSING_UUID",
              "MISSING_INVITATION_TOKEN",
              "MISSING_INVITATION_TOKENS",
              "INVITATION_NOT_FOUND",
              "INVITER_USER_NOT_FOUND",
              "INVITED_USER_ROLE_COULD_NOT_BE_ORGANIZATION_OWNER",
              "INVITING_ORGANIZATION_NOT_FOUND",
              "USER_ALREADY_PART_OF_ORGANIZATION",
              "INVALID_INVITATION_TOKEN",
              "NOT_FOUND_FOR_TOKEN",
              "USER_ALREADY_HAS_ROLE_IN_ORGANIZATION",
              "USER_ALREADY_EXISTS",
              "MISSING_INVITATIONS",
              "USER_ALREADY_HAS_ROLE_IN_CLIENT",
              "INCORRECT_PERMISSIONS"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/CreateInvitationUserResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "CreateInvitationUserForOrganizationResultResponse"
    },
    "CreateInvitationUserResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "CreateInvitationUserResponseModel"
    },
    "CreateShowroomResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "CreateShowroomResponseModel"
    },
    "CreateShowroomResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_NAME",
              "MISSING_PRODUCT_UUIDS",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "INVALID_PRODUCTS_SIZE",
              "INVALID_PASSWORD",
              "INCORRECT_PASSWORD",
              "INVALID_PRODUCT_UUID",
              "SHOWROOM_NOT_FOUND",
              "PRODUCT_NOT_FOUND",
              "DUPLICATED_PRODUCTS_UUIDS",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/CreateShowroomResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "CreateShowroomResultResponse"
    },
    "CreateTextHotspotRequestModel": {
      "title": "CreateTextHotspotRequestModel",
      "allOf": [
        {
          "$ref": "#/definitions/CreateHotspotRequestModel"
        },
        {
          "type": "object",
          "properties": {
            "dimensions": {
              "type": "string"
            },
            "productUuid": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "TEXT",
                "IMAGE",
                "VIDEO"
              ]
            }
          },
          "title": "CreateTextHotspotRequestModel"
        }
      ]
    },
    "CreateVariantGroupResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "CreateVariantGroupResponseModel"
    },
    "CreateVariantGroupResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_ORGANIZATION_OR_CLIENT_UUID",
              "MISSING_NAME",
              "MISSING_PRODUCTS_UUIDS",
              "VARIANT_GROUP_NOT_FOUND",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_STATUS",
              "INVALID_PRODUCTS_SIZE",
              "INVALID_PRODUCT_UUID",
              "PRODUCT_NOT_FOUND",
              "HAS_NOT_LIVE_PRODUCT",
              "VARIANT_GROUP_ALREADY_HAS_THE_SAME_STATUS",
              "TAG_NOT_FOUND",
              "ORGANIZATION_NOT_FOUND",
              "CLIENT_ORGANIZATION_NOT_FOUND",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION_OR_CLIENT"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/CreateVariantGroupResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "CreateVariantGroupResultResponse"
    },
    "CreateVideoHotspotRequestModel": {
      "title": "CreateVideoHotspotRequestModel",
      "allOf": [
        {
          "$ref": "#/definitions/CreateHotspotRequestModel"
        },
        {
          "type": "object",
          "properties": {
            "autoplaying": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            },
            "dimensions": {
              "type": "string"
            },
            "productUuid": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "TEXT",
                "IMAGE",
                "VIDEO"
              ]
            },
            "url": {
              "type": "string"
            }
          },
          "title": "CreateVideoHotspotRequestModel"
        }
      ]
    },
    "DeleteAnnotationResponseModel": {
      "type": "object",
      "properties": {
        "attachmentsCount": {
          "type": "integer",
          "format": "int64"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "DeleteAnnotationResponseModel"
    },
    "DeleteAnnotationResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_USER_UUID",
              "MISSING_PRODUCT_UUID",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_TEXT_AND_ATTACHMENTS",
              "MISSING_RESOLVED",
              "MISSING_DIMENSIONS",
              "ANNOTATION_NOT_FOUND",
              "PRODUCT_NOT_FOUND",
              "INVALID_TEXT_SIZE",
              "INVALID_ATTACHMENTS_SIZE",
              "PRODUCT_ORGANIZATION_UUID_NOT_MATCH",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "USER_ACCESS_DENIED",
              "ALREADY_RESOLVED",
              "MISSING_DELETE_PERMISSION"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/DeleteAnnotationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "DeleteAnnotationResultResponse"
    },
    "DeleteAttachmentResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "DeleteAttachmentResponseModel"
    },
    "DeleteAttachmentResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_NAME",
              "MISSING_BLOB_ID",
              "MISSING_ENTITY_TYPE",
              "MISSING_ENTITY_UUID",
              "MISSING_PRODUCT_UUID",
              "MISSING_PRODUCT_OR_VARIANT_GROUP_UUID",
              "MISSING_VARIANT_GROUP_UUID",
              "MISSING_ATTACHMENTS",
              "ATTACHMENTS_MAX_COUNT_OVERLOADED",
              "ATTACHMENT_NOT_FOUND",
              "NOT_PRODUCT_ATTACHMENT",
              "PRODUCT_NOT_FOUND",
              "VARIANT_GROUP_NOT_FOUND",
              "ANNOTATION_NOT_FOUND",
              "COMMENT_NOT_FOUND",
              "PRODUCT_NOT_MATCH"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/DeleteAttachmentResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "DeleteAttachmentResultResponse"
    },
    "DeleteCommentResponseModel": {
      "type": "object",
      "properties": {
        "attachmentsCount": {
          "type": "integer",
          "format": "int64"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "DeleteCommentResponseModel"
    },
    "DeleteCommentResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_USER_UUID",
              "MISSING_DELETE_PERMISSION",
              "MISSING_ENTITY_TYPE",
              "MISSING_ENTITY_UUID",
              "MISSING_MESSAGE_AND_ATTACHMENTS",
              "MISSING_ORGANIZATION_UUID",
              "PRODUCT_ORGANIZATION_UUID_NOT_MATCH",
              "VARIANT_GROUP_ORGANIZATION_UUID_NOT_MATCH",
              "PRODUCT_NOT_FOUND",
              "ANNOTATION_NOT_FOUND",
              "VARIANT_GROUP_NOT_FOUND",
              "COMMENT_NOT_FOUND",
              "ENTITY_NOT_FOUND",
              "USER_ACCESS_DENIED",
              "ANNOTATION_ALREADY_RESOLVED",
              "INVALID_ATTACHMENTS_SIZE",
              "INVALID_MESSAGE_SIZE"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/DeleteCommentResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "DeleteCommentResultResponse"
    },
    "DeleteShowroomRequestModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "DeleteShowroomRequestModel"
    },
    "DeleteShowroomResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "DeleteShowroomResponseModel"
    },
    "DeleteShowroomResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_NAME",
              "MISSING_PRODUCT_UUIDS",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "INVALID_PRODUCTS_SIZE",
              "INVALID_PASSWORD",
              "INCORRECT_PASSWORD",
              "INVALID_PRODUCT_UUID",
              "SHOWROOM_NOT_FOUND",
              "PRODUCT_NOT_FOUND",
              "DUPLICATED_PRODUCTS_UUIDS",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/DeleteShowroomResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "DeleteShowroomResultResponse"
    },
    "DeleteVariantGroupsResponseModel": {
      "type": "object",
      "properties": {
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "DeleteVariantGroupsResponseModel"
    },
    "DeleteVariantGroupsResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_ORGANIZATION_OR_CLIENT_UUID",
              "MISSING_NAME",
              "MISSING_PRODUCTS_UUIDS",
              "VARIANT_GROUP_NOT_FOUND",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_STATUS",
              "INVALID_PRODUCTS_SIZE",
              "INVALID_PRODUCT_UUID",
              "PRODUCT_NOT_FOUND",
              "HAS_NOT_LIVE_PRODUCT",
              "VARIANT_GROUP_ALREADY_HAS_THE_SAME_STATUS",
              "TAG_NOT_FOUND",
              "ORGANIZATION_NOT_FOUND",
              "CLIENT_ORGANIZATION_NOT_FOUND",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION_OR_CLIENT"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/DeleteVariantGroupsResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "DeleteVariantGroupsResultResponse"
    },
    "DetailsVariantGroupResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_ORGANIZATION_OR_CLIENT_UUID",
              "MISSING_NAME",
              "MISSING_PRODUCTS_UUIDS",
              "VARIANT_GROUP_NOT_FOUND",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_STATUS",
              "INVALID_PRODUCTS_SIZE",
              "INVALID_PRODUCT_UUID",
              "PRODUCT_NOT_FOUND",
              "HAS_NOT_LIVE_PRODUCT",
              "VARIANT_GROUP_ALREADY_HAS_THE_SAME_STATUS",
              "TAG_NOT_FOUND",
              "ORGANIZATION_NOT_FOUND",
              "CLIENT_ORGANIZATION_NOT_FOUND",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION_OR_CLIENT"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/VariantGroupDetailsResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "DetailsVariantGroupResultResponse"
    },
    "DomainUsedResponseModel": {
      "type": "object",
      "properties": {
        "used": {
          "type": "boolean"
        }
      },
      "title": "DomainUsedResponseModel"
    },
    "DynamicErrorResponseModel": {
      "type": "object",
      "title": "DynamicErrorResponseModel"
    },
    "EmptyResponseModel": {
      "type": "object",
      "title": "EmptyResponseModel"
    },
    "FindProductGenerationRequestByFilterRequest": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        },
        "notNullOriginalBlob": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "1",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "30",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "statuses": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "NO_FILE",
              "PENDING",
              "PROCESSING",
              "PRODUCT_GENERATION",
              "FAILED",
              "SUCCESS"
            ]
          }
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "FindProductGenerationRequestByFilterRequest"
    },
    "GCloudStorageResourceCreateBatchSignUrlSessionGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GCloudStorageResourceCreateSignUrlSessionResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "GCloudStorageResourceCreateBatchSignUrlSessionGridResponseModel"
    },
    "GCloudStorageResourceCreateBatchSignUrlSessionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_BUCKET_NAME",
              "MISSING_UNSCANNED_BUCKET_NAME",
              "MISSING_CLEAN_BUCKET_NAME",
              "MISSING_QUARANTINE_BUCKET_NAME",
              "MISSING_PRODUCT_UUID",
              "MISSING_PRODUCT_NAME",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_STORE_TYPE",
              "MISSING_BLOB_ID",
              "MISSING_RESOURCE",
              "MISSING_RESOURCE_SETTINGS",
              "MISSING_RESOURCE_ORIGINAL_NAME",
              "MISSING_RESOURCE_ORIGINAL_NAME_EXTENSION",
              "MISSING_RESOURCE_CONTENT_TYPE",
              "MISSING_RESOURCE_ORIGINAL_SIZE",
              "MISSING_SIGN_URL",
              "MISSING_SIGN_URL_EXTENSION_HEADERS",
              "MISSING_ORIGIN",
              "MISSING_REQUESTED_IP",
              "MISSING_CREATOR_UUID",
              "MISSING_REQUEST_UUID",
              "DUPLICATED_REQUEST_UUID",
              "BUCKET_NOT_FOUND",
              "BLOB_NOT_FOUND",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "CONFLICT",
              "FORBIDDEN",
              "INVALID_RESOURCE_EXTENSION",
              "INVALID_RESOURCE_SIZE",
              "INVALID_RESOURCE_CONTENT",
              "INVALID_PRODUCT_SIZE",
              "INVALID_REQUESTED_IP",
              "PRODUCT_NOT_FOUND",
              "PRODUCT_NOT_UPDATABLE",
              "MISSING_KIND",
              "INVALID_STORE_TYPE"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/GCloudStorageResourceCreateBatchSignUrlSessionGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "GCloudStorageResourceCreateBatchSignUrlSessionResponse"
    },
    "GCloudStorageResourceCreateBatchSignUrlSessionResponseBadRequest": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "BAD_REQUEST",
              "INVALID_PRODUCT_SIZE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "GCloudStorageResourceCreateBatchSignUrlSessionResponseBadRequest"
    },
    "GCloudStorageResourceCreateBatchSignUrlSessionResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "CONFLICT"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "GCloudStorageResourceCreateBatchSignUrlSessionResponseConflict"
    },
    "GCloudStorageResourceCreateBatchSignUrlSessionResponseForbidden": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "FORBIDDEN",
              "ACCESS_DENIED"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "GCloudStorageResourceCreateBatchSignUrlSessionResponseForbidden"
    },
    "GCloudStorageResourceCreateBatchSignUrlSessionResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/GCloudStorageResourceCreateBatchSignUrlSessionGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "GCloudStorageResourceCreateBatchSignUrlSessionResponseOk"
    },
    "GCloudStorageResourceCreateBatchSignUrlSessionResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_REQUEST_UUID",
              "MISSING_BUCKET_NAME",
              "MISSING_PRODUCT_NAME",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_STORE_TYPE",
              "MISSING_RESOURCE_SETTINGS",
              "MISSING_RESOURCE_ORIGINAL_NAME",
              "MISSING_RESOURCE_ORIGINAL_NAME_EXTENSION",
              "MISSING_RESOURCE_CONTENT_TYPE",
              "MISSING_RESOURCE_ORIGINAL_SIZE",
              "MISSING_SIGN_URL",
              "MISSING_SIGN_URL_EXTENSION_HEADERS",
              "MISSING_ORIGIN",
              "DUPLICATED_REQUEST_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "GCloudStorageResourceCreateBatchSignUrlSessionResponseUnprocessable"
    },
    "GCloudStorageResourceCreateSignUrlSessionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_BUCKET_NAME",
              "MISSING_UNSCANNED_BUCKET_NAME",
              "MISSING_CLEAN_BUCKET_NAME",
              "MISSING_QUARANTINE_BUCKET_NAME",
              "MISSING_PRODUCT_UUID",
              "MISSING_PRODUCT_NAME",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_STORE_TYPE",
              "MISSING_BLOB_ID",
              "MISSING_RESOURCE",
              "MISSING_RESOURCE_SETTINGS",
              "MISSING_RESOURCE_ORIGINAL_NAME",
              "MISSING_RESOURCE_ORIGINAL_NAME_EXTENSION",
              "MISSING_RESOURCE_CONTENT_TYPE",
              "MISSING_RESOURCE_ORIGINAL_SIZE",
              "MISSING_SIGN_URL",
              "MISSING_SIGN_URL_EXTENSION_HEADERS",
              "MISSING_ORIGIN",
              "MISSING_REQUESTED_IP",
              "MISSING_CREATOR_UUID",
              "MISSING_REQUEST_UUID",
              "DUPLICATED_REQUEST_UUID",
              "BUCKET_NOT_FOUND",
              "BLOB_NOT_FOUND",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "CONFLICT",
              "FORBIDDEN",
              "INVALID_RESOURCE_EXTENSION",
              "INVALID_RESOURCE_SIZE",
              "INVALID_RESOURCE_CONTENT",
              "INVALID_PRODUCT_SIZE",
              "INVALID_REQUESTED_IP",
              "PRODUCT_NOT_FOUND",
              "PRODUCT_NOT_UPDATABLE",
              "MISSING_KIND",
              "INVALID_STORE_TYPE"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/GCloudStorageResourceCreateSignUrlSessionResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "GCloudStorageResourceCreateSignUrlSessionResponse"
    },
    "GCloudStorageResourceCreateSignUrlSessionResponseBadRequest": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "BAD_REQUEST"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "GCloudStorageResourceCreateSignUrlSessionResponseBadRequest"
    },
    "GCloudStorageResourceCreateSignUrlSessionResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "CONFLICT"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "GCloudStorageResourceCreateSignUrlSessionResponseConflict"
    },
    "GCloudStorageResourceCreateSignUrlSessionResponseForbidden": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "FORBIDDEN",
              "ACCESS_DENIED"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "GCloudStorageResourceCreateSignUrlSessionResponseForbidden"
    },
    "GCloudStorageResourceCreateSignUrlSessionResponseModel": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "requestUuid": {
          "type": "string"
        }
      },
      "title": "GCloudStorageResourceCreateSignUrlSessionResponseModel"
    },
    "GCloudStorageResourceCreateSignUrlSessionResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/GCloudStorageResourceCreateSignUrlSessionResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "GCloudStorageResourceCreateSignUrlSessionResponseOk"
    },
    "GCloudStorageResourceCreateSignUrlSessionResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_REQUEST_UUID",
              "MISSING_BUCKET_NAME",
              "MISSING_PRODUCT_UUID",
              "MISSING_STORE_TYPE",
              "MISSING_RESOURCE_SETTINGS",
              "MISSING_RESOURCE_ORIGINAL_NAME",
              "MISSING_RESOURCE_ORIGINAL_NAME_EXTENSION",
              "MISSING_RESOURCE_CONTENT_TYPE",
              "MISSING_RESOURCE_ORIGINAL_SIZE",
              "MISSING_SIGN_URL",
              "MISSING_SIGN_URL_EXTENSION_HEADERS",
              "MISSING_ORIGIN"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "GCloudStorageResourceCreateSignUrlSessionResponseUnprocessable"
    },
    "GCloudStorageResourceUploadResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_BUCKET_NAME",
              "MISSING_UNSCANNED_BUCKET_NAME",
              "MISSING_CLEAN_BUCKET_NAME",
              "MISSING_QUARANTINE_BUCKET_NAME",
              "MISSING_PRODUCT_UUID",
              "MISSING_PRODUCT_NAME",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_STORE_TYPE",
              "MISSING_BLOB_ID",
              "MISSING_RESOURCE",
              "MISSING_RESOURCE_SETTINGS",
              "MISSING_RESOURCE_ORIGINAL_NAME",
              "MISSING_RESOURCE_ORIGINAL_NAME_EXTENSION",
              "MISSING_RESOURCE_CONTENT_TYPE",
              "MISSING_RESOURCE_ORIGINAL_SIZE",
              "MISSING_SIGN_URL",
              "MISSING_SIGN_URL_EXTENSION_HEADERS",
              "MISSING_ORIGIN",
              "MISSING_REQUESTED_IP",
              "MISSING_CREATOR_UUID",
              "MISSING_REQUEST_UUID",
              "DUPLICATED_REQUEST_UUID",
              "BUCKET_NOT_FOUND",
              "BLOB_NOT_FOUND",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "CONFLICT",
              "FORBIDDEN",
              "INVALID_RESOURCE_EXTENSION",
              "INVALID_RESOURCE_SIZE",
              "INVALID_RESOURCE_CONTENT",
              "INVALID_PRODUCT_SIZE",
              "INVALID_REQUESTED_IP",
              "PRODUCT_NOT_FOUND",
              "PRODUCT_NOT_UPDATABLE",
              "MISSING_KIND",
              "INVALID_STORE_TYPE"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/GCloudStorageResourceUploadResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "GCloudStorageResourceUploadResponse"
    },
    "GCloudStorageResourceUploadResponseModel": {
      "type": "object",
      "properties": {
        "blobId": {
          "type": "string"
        },
        "blobSize": {
          "type": "integer",
          "format": "int64"
        },
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "GCloudStorageResourceUploadResponseModel"
    },
    "GatewayProductStatusUpdateRequestItem": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "WAITING_REVIEW",
            "APPROVED",
            "REJECTED",
            "LIVE"
          ]
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "GatewayProductStatusUpdateRequestItem"
    },
    "GenerateTagGroupRequest": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        }
      },
      "title": "GenerateTagGroupRequest"
    },
    "GenerateTagGroupResponseModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "GenerateTagGroupResponseModel"
    },
    "GenerateTagGroupResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_TAG_GROUPS_UUIDS",
              "MISSING_ANY_TAG_GROUP_UUID",
              "MISSING_NAME",
              "MISSING_UUID",
              "ALREADY_EXISTS_FOR_CLIENT_AND_NAME",
              "TAG_GROUP_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/GenerateTagGroupResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "GenerateTagGroupResultResponse"
    },
    "GenerateTagGroupResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/GenerateTagGroupResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "GenerateTagGroupResultResponseOk"
    },
    "GenerateTagGroupResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "GenerateTagGroupResultResponseUnprocessable"
    },
    "GeoLocationModel": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "lat": {
          "type": "string"
        },
        "lng": {
          "type": "string"
        }
      },
      "title": "GeoLocationModel"
    },
    "GetAllByStatusUserInvitationsGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetAllByStatusUserInvitationsResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "GetAllByStatusUserInvitationsGridResponseModel"
    },
    "GetAllByStatusUserInvitationsResponseModel": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "SUPER_ADMIN",
            "ORGANIZATION_OWNER",
            "ORGANIZATION_ADMIN",
            "ORGANIZATION_CLIENT_MEMBER",
            "CLIENT_ORGANIZATION_ADMIN",
            "CLIENT_ORGANIZATION_CONTENT_MANAGER",
            "CLIENT_ORGANIZATION_VIEWER"
          ]
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "GetAllByStatusUserInvitationsResponseModel"
    },
    "GetAllByStatusUserInvitationsResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_USER_ROLE",
              "MISSING_INVITED_USER_EMAIL",
              "MISSING_INVITER_USER_UUID",
              "MISSING_INVITING_ORGANIZATION_UUID",
              "MISSING_INVITING_ORGANIZATION_NAME",
              "MISSING_USER_FULL_NAME",
              "MISSING_PASSWORD",
              "TOKEN_IS_EXPIRED",
              "MISSING_INVITATION_STATUS",
              "MISSING_UUID",
              "MISSING_INVITATION_TOKEN",
              "MISSING_INVITATION_TOKENS",
              "INVITATION_NOT_FOUND",
              "INVITER_USER_NOT_FOUND",
              "INVITED_USER_ROLE_COULD_NOT_BE_ORGANIZATION_OWNER",
              "INVITING_ORGANIZATION_NOT_FOUND",
              "USER_ALREADY_PART_OF_ORGANIZATION",
              "INVALID_INVITATION_TOKEN",
              "NOT_FOUND_FOR_TOKEN",
              "USER_ALREADY_HAS_ROLE_IN_ORGANIZATION",
              "USER_ALREADY_EXISTS",
              "MISSING_INVITATIONS",
              "USER_ALREADY_HAS_ROLE_IN_CLIENT",
              "INCORRECT_PERMISSIONS"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/GetAllByStatusUserInvitationsGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "GetAllByStatusUserInvitationsResultResponse"
    },
    "GetAttachmentsResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_NAME",
              "MISSING_BLOB_ID",
              "MISSING_ENTITY_TYPE",
              "MISSING_ENTITY_UUID",
              "MISSING_PRODUCT_UUID",
              "MISSING_PRODUCT_OR_VARIANT_GROUP_UUID",
              "MISSING_VARIANT_GROUP_UUID",
              "MISSING_ATTACHMENTS",
              "ATTACHMENTS_MAX_COUNT_OVERLOADED",
              "ATTACHMENT_NOT_FOUND",
              "NOT_PRODUCT_ATTACHMENT",
              "PRODUCT_NOT_FOUND",
              "VARIANT_GROUP_NOT_FOUND",
              "ANNOTATION_NOT_FOUND",
              "COMMENT_NOT_FOUND",
              "PRODUCT_NOT_MATCH"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/AttachmentGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "GetAttachmentsResultResponse"
    },
    "GetByUserInvitationTokenResponseModel": {
      "type": "object",
      "properties": {
        "invitedUserEmail": {
          "type": "string"
        },
        "invitedUserExists": {
          "type": "boolean"
        },
        "inviterUserFullName": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "INVITED",
            "REJECTED",
            "ACCEPTED"
          ]
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "GetByUserInvitationTokenResponseModel"
    },
    "GetByUserInvitationTokenResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_USER_ROLE",
              "MISSING_INVITED_USER_EMAIL",
              "MISSING_INVITER_USER_UUID",
              "MISSING_INVITING_ORGANIZATION_UUID",
              "MISSING_INVITING_ORGANIZATION_NAME",
              "MISSING_USER_FULL_NAME",
              "MISSING_PASSWORD",
              "TOKEN_IS_EXPIRED",
              "MISSING_INVITATION_STATUS",
              "MISSING_UUID",
              "MISSING_INVITATION_TOKEN",
              "MISSING_INVITATION_TOKENS",
              "INVITATION_NOT_FOUND",
              "INVITER_USER_NOT_FOUND",
              "INVITED_USER_ROLE_COULD_NOT_BE_ORGANIZATION_OWNER",
              "INVITING_ORGANIZATION_NOT_FOUND",
              "USER_ALREADY_PART_OF_ORGANIZATION",
              "INVALID_INVITATION_TOKEN",
              "NOT_FOUND_FOR_TOKEN",
              "USER_ALREADY_HAS_ROLE_IN_ORGANIZATION",
              "USER_ALREADY_EXISTS",
              "MISSING_INVITATIONS",
              "USER_ALREADY_HAS_ROLE_IN_CLIENT",
              "INCORRECT_PERMISSIONS"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/GetByUserInvitationTokenResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "GetByUserInvitationTokenResultResponse"
    },
    "GetClientOrganizationResponseModel": {
      "type": "object",
      "properties": {
        "clientName": {
          "type": "string"
        },
        "clientSlug": {
          "type": "string"
        },
        "clientUuid": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "imageBlobId": {
          "type": "string"
        },
        "locationsCount": {
          "type": "integer",
          "format": "int32"
        },
        "organizationSlug": {
          "type": "string"
        },
        "organizationUuid": {
          "type": "string"
        },
        "productsCount": {
          "type": "integer",
          "format": "int32"
        },
        "tagsCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "GetClientOrganizationResponseModel"
    },
    "GetClientOrganizationResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_NAME",
              "MISSING_SLUG",
              "SLUG_ALREADY_EXISTS",
              "SLUG_NOT_VALID",
              "CLIENT_NOT_FOUND",
              "USER_NOT_FOUND",
              "ORGANIZATION_NOT_FOUND",
              "MISSING_USER_UUID"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/GetClientOrganizationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "GetClientOrganizationResultResponse"
    },
    "GetLocationResponseModel": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocationModel"
        },
        "language": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "regionUuid": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationTagsResponseModel"
          }
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "GetLocationResponseModel"
    },
    "GetOrganizationByUuidResponseModel": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "imageBlobId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "DISABLED"
          ]
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "GetOrganizationByUuidResponseModel"
    },
    "GetOrganizationByUuidResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_SLUG",
              "SLUG_ALREADY_EXISTS",
              "SLUG_NOT_VALID",
              "SLUG_NOT_FOUND",
              "MISSING_USER_UUID",
              "ORGANIZATION_NOT_FOUND",
              "MISSING_UUID",
              "USER_NOT_FOUND",
              "ORGANIZATION_INVITATION_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/GetOrganizationByUuidResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "GetOrganizationByUuidResultResponse"
    },
    "GetUserByUuidsAndOrganizationUuidResponseModel": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "imageBlobId": {
          "type": "string"
        },
        "inOrganization": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "GetUserByUuidsAndOrganizationUuidResponseModel"
    },
    "GetUserClientOrganizationsGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetUserClientOrganizationsResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "GetUserClientOrganizationsGridResponseModel"
    },
    "GetUserClientOrganizationsResponseModel": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "imageBlobId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "SUPER_ADMIN",
            "ORGANIZATION_OWNER",
            "ORGANIZATION_ADMIN",
            "ORGANIZATION_CLIENT_MEMBER",
            "CLIENT_ORGANIZATION_ADMIN",
            "CLIENT_ORGANIZATION_CONTENT_MANAGER",
            "CLIENT_ORGANIZATION_VIEWER"
          ]
        },
        "slug": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "GetUserClientOrganizationsResponseModel"
    },
    "GetUserOrganizationsGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetUserOrganizationsResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "GetUserOrganizationsGridResponseModel"
    },
    "GetUserOrganizationsResponseModel": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "imageBlobId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "SUPER_ADMIN",
            "ORGANIZATION_OWNER",
            "ORGANIZATION_ADMIN",
            "ORGANIZATION_CLIENT_MEMBER",
            "CLIENT_ORGANIZATION_ADMIN",
            "CLIENT_ORGANIZATION_CONTENT_MANAGER",
            "CLIENT_ORGANIZATION_VIEWER"
          ]
        },
        "slug": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "GetUserOrganizationsResponseModel"
    },
    "GetUsersByOrganizationGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetUsersByOrganizationResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "GetUsersByOrganizationGridResponseModel"
    },
    "GetUsersByOrganizationResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_NAME",
              "MISSING_CLIENT_SLUG",
              "MISSING_CLIENT",
              "MISSING_FULL_NAME",
              "MISSING_EMAIL",
              "MISSING_PASSWORD",
              "MISSING_ORGANIZATION",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_USER_ROLE",
              "NOT_FOUND_FOR_EMAIL",
              "NOT_FOUND_FOR_ORGANIZATION",
              "NOT_FOUND_FOR_CLIENT_ORGANIZATION",
              "NOT_FOUND_FOR_USERS_UUIDS",
              "NOT_FOUND_FOR_UUID",
              "NOT_FOUND_FOR_ROLE",
              "ORGANIZATION_NOT_FOUND",
              "SIGN_UP_WITH_EXISTING_EMAIL",
              "INVALID_EMAIL_FORMAT",
              "USER_ALREADY_VERIFIED",
              "MISSING_VERIFICATION_TOKEN",
              "MISSING_RESET_PASSWORD_TOKEN",
              "INVALID_RESET_PASSWORD_TOKEN",
              "USER_NOT_FOUND",
              "PASSWORD_MISMATCH",
              "INVALID_VERIFICATION_TOKEN",
              "ORGANIZATION_ROLE_CONFLICT",
              "NOT_A_SUPER_ADMIN",
              "MISSING_TOKEN",
              "TOKEN_NOT_FOUND",
              "INVALID_USER"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/GetUsersByOrganizationGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "GetUsersByOrganizationResponse"
    },
    "GetUsersByOrganizationResponseModel": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "imageBlobId": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "SUPER_ADMIN",
            "ORGANIZATION_OWNER",
            "ORGANIZATION_ADMIN",
            "ORGANIZATION_CLIENT_MEMBER",
            "CLIENT_ORGANIZATION_ADMIN",
            "CLIENT_ORGANIZATION_CONTENT_MANAGER",
            "CLIENT_ORGANIZATION_VIEWER"
          ]
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "GetUsersByOrganizationResponseModel"
    },
    "GetUsersByUuidsAndOrganizationUuidGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetUserByUuidsAndOrganizationUuidResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "GetUsersByUuidsAndOrganizationUuidGridResponseModel"
    },
    "HotspotCreateResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_PRODUCT_UUID",
              "MISSING_USER_UUID",
              "MISSING_HOTSPOT_TYPE",
              "MISSING_DIMENSIONS",
              "MISSING_BLOB_ID",
              "MISSING_URL",
              "MISSING_AUTOPLAYING_FLAG",
              "MISSING_TEXT",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "HOTSPOT_NOT_FOUND",
              "PRODUCT_DOES_NOT_EXIST",
              "ORGANIZATION_UUID_MISMATCH",
              "PRODUCT_NOT_FOUND",
              "PRODUCT_ALREADY_LIVE",
              "INVALID_PRODUCT_UUID",
              "INVALID_TEXT_SIZE"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/HotspotResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "HotspotCreateResultResponse"
    },
    "HotspotCreateResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_ALREADY_LIVE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "HotspotCreateResultResponseConflict"
    },
    "HotspotCreateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "HotspotCreateResultResponseNotFound"
    },
    "HotspotCreateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/HotspotResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "HotspotCreateResultResponseOk"
    },
    "HotspotCreateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PRODUCT_UUID",
              "MISSING_USER_UUID",
              "MISSING_HOTSPOT_TYPE",
              "MISSING_DIMENSIONS",
              "MISSING_BLOB_ID",
              "MISSING_URL",
              "MISSING_AUTOPLAYING_FLAG",
              "MISSING_TEXT"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "HotspotCreateResultResponseUnprocessable"
    },
    "HotspotDeleteResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "HotspotDeleteResponseModel"
    },
    "HotspotDeleteResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_PRODUCT_UUID",
              "MISSING_USER_UUID",
              "MISSING_HOTSPOT_TYPE",
              "MISSING_DIMENSIONS",
              "MISSING_BLOB_ID",
              "MISSING_URL",
              "MISSING_AUTOPLAYING_FLAG",
              "MISSING_TEXT",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "HOTSPOT_NOT_FOUND",
              "PRODUCT_DOES_NOT_EXIST",
              "ORGANIZATION_UUID_MISMATCH",
              "PRODUCT_NOT_FOUND",
              "PRODUCT_ALREADY_LIVE",
              "INVALID_PRODUCT_UUID",
              "INVALID_TEXT_SIZE"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/HotspotDeleteResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "HotspotDeleteResultResponse"
    },
    "HotspotDeleteResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "HOTSPOT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "HotspotDeleteResultResponseNotFound"
    },
    "HotspotDeleteResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/HotspotDeleteResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "HotspotDeleteResultResponseOk"
    },
    "HotspotGetResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/HotspotResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "HotspotGetResultResponseOk"
    },
    "HotspotGetResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_PRODUCT_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "HotspotGetResultResponseUnprocessable"
    },
    "HotspotGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HotspotResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HotspotGridResponseModel"
    },
    "HotspotResponseModel": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "dimensions": {
          "type": "string"
        },
        "productUuid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "TEXT",
            "IMAGE",
            "VIDEO"
          ]
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "userUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "HotspotResponseModel"
    },
    "HotspotUpdateResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_PRODUCT_UUID",
              "MISSING_USER_UUID",
              "MISSING_HOTSPOT_TYPE",
              "MISSING_DIMENSIONS",
              "MISSING_BLOB_ID",
              "MISSING_URL",
              "MISSING_AUTOPLAYING_FLAG",
              "MISSING_TEXT",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "HOTSPOT_NOT_FOUND",
              "PRODUCT_DOES_NOT_EXIST",
              "ORGANIZATION_UUID_MISMATCH",
              "PRODUCT_NOT_FOUND",
              "PRODUCT_ALREADY_LIVE",
              "INVALID_PRODUCT_UUID",
              "INVALID_TEXT_SIZE"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/HotspotResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "HotspotUpdateResultResponse"
    },
    "HotspotUpdateResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_ALREADY_LIVE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "HotspotUpdateResultResponseConflict"
    },
    "HotspotUpdateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "HOTSPOT_NOT_FOUND",
              "PRODUCT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "HotspotUpdateResultResponseNotFound"
    },
    "HotspotUpdateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/HotspotResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "HotspotUpdateResultResponseOk"
    },
    "HotspotUpdateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_PRODUCT_UUID",
              "MISSING_USER_UUID",
              "MISSING_HOTSPOT_TYPE",
              "MISSING_DIMENSIONS",
              "MISSING_BLOB_ID",
              "MISSING_URL",
              "MISSING_AUTOPLAYING_FLAG",
              "MISSING_TEXT"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "HotspotUpdateResultResponseUnprocessable"
    },
    "HotspotViewResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_PRODUCT_UUID",
              "MISSING_USER_UUID",
              "MISSING_HOTSPOT_TYPE",
              "MISSING_DIMENSIONS",
              "MISSING_BLOB_ID",
              "MISSING_URL",
              "MISSING_AUTOPLAYING_FLAG",
              "MISSING_TEXT",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "HOTSPOT_NOT_FOUND",
              "PRODUCT_DOES_NOT_EXIST",
              "ORGANIZATION_UUID_MISMATCH",
              "PRODUCT_NOT_FOUND",
              "PRODUCT_ALREADY_LIVE",
              "INVALID_PRODUCT_UUID",
              "INVALID_TEXT_SIZE"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/HotspotGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "HotspotViewResultResponse"
    },
    "ImageHotspotResponseModel": {
      "title": "ImageHotspotResponseModel",
      "allOf": [
        {
          "$ref": "#/definitions/HotspotResponseModel"
        },
        {
          "type": "object",
          "properties": {
            "blobId": {
              "type": "string"
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "description": {
              "type": "string"
            },
            "dimensions": {
              "type": "string"
            },
            "productUuid": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "TEXT",
                "IMAGE",
                "VIDEO"
              ]
            },
            "updated": {
              "type": "string",
              "format": "date-time"
            },
            "userUuid": {
              "type": "string"
            },
            "uuid": {
              "type": "string"
            }
          },
          "title": "ImageHotspotResponseModel"
        }
      ]
    },
    "InvitationAcceptOrganizationInvitationAndSignUpResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TOKEN_IS_EXPIRED",
              "ALREADY_REJECTED_INVITATION",
              "ALREADY_ACCEPTED_INVITATION",
              "SLUG_IS_NOT_AVAILABLE",
              "USER_ALREADY_EXISTS_FOR_EMAIL"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptOrganizationInvitationAndSignUpResultResponseConflict"
    },
    "InvitationAcceptOrganizationInvitationAndSignUpResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TOKEN_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptOrganizationInvitationAndSignUpResultResponseNotFound"
    },
    "InvitationAcceptOrganizationInvitationAndSignUpResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AbstractUuidAwareResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "InvitationAcceptOrganizationInvitationAndSignUpResultResponseOk"
    },
    "InvitationAcceptOrganizationInvitationAndSignUpResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_TOKEN",
              "MISSING_ORGANIZATION_NAME",
              "MISSING_ORGANIZATION_SLUG",
              "MISSING_USER_FULL_NAME",
              "MISSING_USER_PASSWORD"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptOrganizationInvitationAndSignUpResultResponseUnprocessable"
    },
    "InvitationAcceptOrganizationInvitationResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TOKEN_IS_EXPIRED",
              "ALREADY_REJECTED_INVITATION",
              "ALREADY_ACCEPTED_INVITATION",
              "SLUG_IS_NOT_AVAILABLE",
              "USER_ALREADY_EXISTS_FOR_EMAIL"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptOrganizationInvitationResultResponseConflict"
    },
    "InvitationAcceptOrganizationInvitationResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TOKEN_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptOrganizationInvitationResultResponseNotFound"
    },
    "InvitationAcceptOrganizationInvitationResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AbstractUuidAwareResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "InvitationAcceptOrganizationInvitationResultResponseOk"
    },
    "InvitationAcceptOrganizationInvitationResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_TOKEN",
              "MISSING_ORGANIZATION_NAME",
              "MISSING_ORGANIZATION_SLUG"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptOrganizationInvitationResultResponseUnprocessable"
    },
    "InvitationAcceptUserInvitationToClientAndSignUpResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "USER_ALREADY_EXISTS"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToClientAndSignUpResultResponseConflict"
    },
    "InvitationAcceptUserInvitationToClientAndSignUpResultResponseNotAcceptable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TOKEN_IS_EXPIRED"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToClientAndSignUpResultResponseNotAcceptable"
    },
    "InvitationAcceptUserInvitationToClientAndSignUpResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "NOT_FOUND_FOR_TOKEN"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToClientAndSignUpResultResponseNotFound"
    },
    "InvitationAcceptUserInvitationToClientAndSignUpResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AcceptInvitationUserToClientResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "InvitationAcceptUserInvitationToClientAndSignUpResultResponseOk"
    },
    "InvitationAcceptUserInvitationToClientAndSignUpResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_INVITATION_TOKEN",
              "MISSING_USER_FULL_NAME",
              "MISSING_PASSWORD"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToClientAndSignUpResultResponseUnprocessable"
    },
    "InvitationAcceptUserInvitationToClientResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "USER_ALREADY_HAS_ROLE_IN_CLIENT"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToClientResultResponseConflict"
    },
    "InvitationAcceptUserInvitationToClientResultResponseNotAcceptable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TOKEN_IS_EXPIRED"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToClientResultResponseNotAcceptable"
    },
    "InvitationAcceptUserInvitationToClientResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "NOT_FOUND_FOR_TOKEN"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToClientResultResponseNotFound"
    },
    "InvitationAcceptUserInvitationToClientResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_INVITATION_TOKEN"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToClientResultResponseUnprocessable"
    },
    "InvitationAcceptUserInvitationToOrganizationAndSignUpResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "USER_ALREADY_EXISTS"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToOrganizationAndSignUpResultResponseConflict"
    },
    "InvitationAcceptUserInvitationToOrganizationAndSignUpResultResponseNotAcceptable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TOKEN_IS_EXPIRED"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToOrganizationAndSignUpResultResponseNotAcceptable"
    },
    "InvitationAcceptUserInvitationToOrganizationAndSignUpResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "NOT_FOUND_FOR_TOKEN"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToOrganizationAndSignUpResultResponseNotFound"
    },
    "InvitationAcceptUserInvitationToOrganizationAndSignUpResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AcceptInvitationUserToOrganizationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "InvitationAcceptUserInvitationToOrganizationAndSignUpResultResponseOk"
    },
    "InvitationAcceptUserInvitationToOrganizationAndSignUpResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_INVITATION_TOKEN",
              "MISSING_USER_FULL_NAME",
              "MISSING_PASSWORD"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToOrganizationAndSignUpResultResponseUnprocessable"
    },
    "InvitationAcceptUserInvitationToOrganizationResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "USER_ALREADY_HAS_ROLE_IN_ORGANIZATION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToOrganizationResultResponseConflict"
    },
    "InvitationAcceptUserInvitationToOrganizationResultResponseNotAcceptable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TOKEN_IS_EXPIRED"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToOrganizationResultResponseNotAcceptable"
    },
    "InvitationAcceptUserInvitationToOrganizationResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "NOT_FOUND_FOR_TOKEN"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToOrganizationResultResponseNotFound"
    },
    "InvitationAcceptUserInvitationToOrganizationResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AcceptInvitationUserToOrganizationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "InvitationAcceptUserInvitationToOrganizationResultResponseOk"
    },
    "InvitationAcceptUserInvitationToOrganizationResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_INVITATION_TOKEN"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationAcceptUserInvitationToOrganizationResultResponseUnprocessable"
    },
    "InvitationGetAllInvitedUserInvitationsResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "INVITING_ORGANIZATION_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationGetAllInvitedUserInvitationsResultResponseNotFound"
    },
    "InvitationGetAllInvitedUserInvitationsResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/GetAllByStatusUserInvitationsGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "InvitationGetAllInvitedUserInvitationsResultResponseOk"
    },
    "InvitationGetOrganizationInvitationResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationGetOrganizationInvitationResultResponseNotFound"
    },
    "InvitationGetOrganizationInvitationResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AdminInvitationGetByTokenResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "InvitationGetOrganizationInvitationResultResponseOk"
    },
    "InvitationGetOrganizationInvitationResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "INVALID_TOKEN",
              "EXPIRED_TOKEN",
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationGetOrganizationInvitationResultResponseUnprocessable"
    },
    "InvitationGetUserInvitationResultResponseBadRequest": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "INVALID_INVITATION_TOKEN"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationGetUserInvitationResultResponseBadRequest"
    },
    "InvitationGetUserInvitationResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "NOT_FOUND_FOR_TOKEN"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationGetUserInvitationResultResponseNotFound"
    },
    "InvitationGetUserInvitationResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/GetByUserInvitationTokenResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "InvitationGetUserInvitationResultResponseOk"
    },
    "InvitationGetUserInvitationResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_INVITATION_TOKEN"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationGetUserInvitationResultResponseUnprocessable"
    },
    "InvitationInviteUserToClientOrganizationResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "USER_ALREADY_HAS_ROLE_IN_ORGANIZATION",
              "USER_ALREADY_HAS_ROLE_IN_CLIENT",
              "INCORRECT_PERMISSIONS"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationInviteUserToClientOrganizationResultResponseConflict"
    },
    "InvitationInviteUserToClientOrganizationResultResponseNotAcceptable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "BAD_REQUEST"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationInviteUserToClientOrganizationResultResponseNotAcceptable"
    },
    "InvitationInviteUserToClientOrganizationResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "INVITER_USER_NOT_FOUND",
              "INVITING_ORGANIZATION_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationInviteUserToClientOrganizationResultResponseNotFound"
    },
    "InvitationInviteUserToClientOrganizationResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/CreateInvitationUserForClientsResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "InvitationInviteUserToClientOrganizationResultResponseOk"
    },
    "InvitationInviteUserToClientOrganizationResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_INVITATIONS",
              "MISSING_INVITED_USER_EMAIL"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationInviteUserToClientOrganizationResultResponseUnprocessable"
    },
    "InvitationInviteUserToOrganizationResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "INVALID_INVITATION_TOKEN",
              "INVITER_USER_NOT_FOUND",
              "INVITING_ORGANIZATION_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationInviteUserToOrganizationResultResponseNotFound"
    },
    "InvitationInviteUserToOrganizationResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/CreateInvitationUserResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "InvitationInviteUserToOrganizationResultResponseOk"
    },
    "InvitationInviteUserToOrganizationResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_INVITED_USER_EMAIL",
              "MISSING_USER_ROLE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationInviteUserToOrganizationResultResponseUnprocessable"
    },
    "InvitationRejectResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TOKEN_IS_EXPIRED",
              "ALREADY_REJECTED_INVITATION",
              "ALREADY_ACCEPTED_INVITATION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationRejectResultResponseConflict"
    },
    "InvitationRejectResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TOKEN_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationRejectResultResponseNotFound"
    },
    "InvitationRejectResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/EmptyResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "InvitationRejectResultResponseOk"
    },
    "InvitationRejectResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_TOKEN"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "InvitationRejectResultResponseUnprocessable"
    },
    "LanguageGetAllGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageGetResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "LanguageGetAllGridResponseModel"
    },
    "LanguageGetAllResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "LANGUAGE_NOT_FOUND",
              "MISSING_UUID"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/LanguageGetAllGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "LanguageGetAllResponse"
    },
    "LanguageGetResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "LANGUAGE_NOT_FOUND",
              "MISSING_UUID"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/LanguageGetResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "LanguageGetResponse"
    },
    "LanguageGetResponseModel": {
      "type": "object",
      "properties": {
        "default": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "LanguageGetResponseModel"
    },
    "LanguageGetResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "LANGUAGE_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "LanguageGetResultResponseNotFound"
    },
    "LanguageGetResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/LanguageGetResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "LanguageGetResultResponseOk"
    },
    "LanguageGetResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "LanguageGetResultResponseUnprocessable"
    },
    "LocationCreateRequest": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocationModel"
        },
        "languageUuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "regionUuid": {
          "type": "string"
        },
        "tagsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "LocationCreateRequest"
    },
    "LocationCreateResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "LocationCreateResponseModel"
    },
    "LocationCreateResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_UUID",
              "MISSING_NAME",
              "MISSING_LANGUAGE",
              "LOCATION_ALREADY_EXISTS_FOR_CLIENT_AND_NAME",
              "LOCATION_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/LocationCreateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "LocationCreateResultResponse"
    },
    "LocationCreateResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "LOCATION_ALREADY_EXISTS_FOR_CLIENT_AND_NAME"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "LocationCreateResultResponseConflict"
    },
    "LocationCreateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/LocationCreateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "LocationCreateResultResponseOk"
    },
    "LocationCreateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_NAME",
              "MISSING_LANGUAGE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "LocationCreateResultResponseUnprocessable"
    },
    "LocationDeleteRequest": {
      "type": "object",
      "properties": {
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "LocationDeleteRequest"
    },
    "LocationDeleteResponseModel": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "LocationDeleteResponseModel"
    },
    "LocationDeleteResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_UUID",
              "MISSING_NAME",
              "MISSING_LANGUAGE",
              "LOCATION_ALREADY_EXISTS_FOR_CLIENT_AND_NAME",
              "LOCATION_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/LocationDeleteResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "LocationDeleteResultResponse"
    },
    "LocationDeleteResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/LocationDeleteResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "LocationDeleteResultResponseOk"
    },
    "LocationDeleteResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "LocationDeleteResultResponseUnprocessable"
    },
    "LocationGetResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_UUID",
              "MISSING_NAME",
              "MISSING_LANGUAGE",
              "LOCATION_ALREADY_EXISTS_FOR_CLIENT_AND_NAME",
              "LOCATION_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/GetLocationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "LocationGetResultResponse"
    },
    "LocationGetResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "LOCATION_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/GetLocationResponseModel"
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "LocationGetResultResponseNotFound"
    },
    "LocationGetResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/GetLocationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "LocationGetResultResponseOk"
    },
    "LocationTagsResponseModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "LocationTagsResponseModel"
    },
    "LocationUpdateRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/GeoLocationModel"
        },
        "languageUuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "regionUuid": {
          "type": "string"
        },
        "tagsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "LocationUpdateRequest"
    },
    "LocationUpdateResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "LocationUpdateResponseModel"
    },
    "LocationUpdateResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_UUID",
              "MISSING_NAME",
              "MISSING_LANGUAGE",
              "LOCATION_ALREADY_EXISTS_FOR_CLIENT_AND_NAME",
              "LOCATION_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/LocationUpdateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "LocationUpdateResultResponse"
    },
    "LocationUpdateResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "LOCATION_ALREADY_EXISTS_FOR_CLIENT_AND_NAME"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "LocationUpdateResultResponseConflict"
    },
    "LocationUpdateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "LOCATION_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "LocationUpdateResultResponseNotFound"
    },
    "LocationUpdateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/LocationUpdateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "LocationUpdateResultResponseOk"
    },
    "LocationUpdateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_UUID",
              "MISSING_LANGUAGE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "LocationUpdateResultResponseUnprocessable"
    },
    "LocationUsedResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_UUID",
              "MISSING_NAME",
              "MISSING_LANGUAGE",
              "LOCATION_ALREADY_EXISTS_FOR_CLIENT_AND_NAME",
              "LOCATION_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/DomainUsedResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "LocationUsedResultResponse"
    },
    "LocationUsedResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/DomainUsedResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "LocationUsedResultResponseOk"
    },
    "LocationUsedResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "LocationUsedResultResponseUnprocessable"
    },
    "LoginUserResponseModel": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "title": "LoginUserResponseModel"
    },
    "LoginUserResultResponseForbidden": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "FORBIDDEN",
              "UNAUTHORIZED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR",
              "CLIENT_BLOCKED",
              "UNAUTHORIZED_IP"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "LoginUserResultResponseForbidden"
    },
    "LoginUserResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/LoginUserResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "LoginUserResultResponseOk"
    },
    "Map«string,string»": {
      "type": "object",
      "title": "Map«string,string»",
      "additionalProperties": {
        "type": "string"
      }
    },
    "Model": {
      "type": "object",
      "properties": {
        "conversionFormat": {
          "type": "string",
          "enum": [
            "GLB",
            "USDZ",
            "OPTIMIZED"
          ]
        },
        "conversionStatus": {
          "type": "string",
          "enum": [
            "PENDING",
            "CONVERTING",
            "COMPLETED",
            "FAILED",
            "NO_ASSET",
            "TERMINATED"
          ]
        },
        "error": {
          "$ref": "#/definitions/ConversionErrorModel"
        },
        "modelBlobId": {
          "type": "string"
        },
        "modelSize": {
          "type": "integer",
          "format": "int64"
        },
        "optimizationThreeDComponents": {
          "$ref": "#/definitions/ThreeDComponentsModel"
        },
        "originalThreeDComponents": {
          "$ref": "#/definitions/ThreeDComponentsModel"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "Model"
    },
    "OrganizationGetResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "ORGANIZATION_NOT_FOUND",
              "SLUG_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "OrganizationGetResultResponseNotFound"
    },
    "OrganizationGetResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/GetOrganizationByUuidResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "OrganizationGetResultResponseOk"
    },
    "OrganizationGetResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_SLUG",
              "SLUG_ALREADY_EXISTS",
              "SLUG_NOT_VALID",
              "MISSING_USER_UUID",
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "OrganizationGetResultResponseUnprocessable"
    },
    "OrganizationSlugAvailable": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/CheckAvailableOrganizationSlugResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "OrganizationSlugAvailable"
    },
    "OrganizationSlugAvailibilityResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "SLUG_NOT_VALID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "OrganizationSlugAvailibilityResultResponseUnprocessable"
    },
    "PipelinesGetPipelineByUuidResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AdminCommonModelOpsPipelineResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "PipelinesGetPipelineByUuidResultResponseOk"
    },
    "PipelinesGetPipelinesResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AdminCommonModelOpsPipelinesResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "PipelinesGetPipelinesResultResponseOk"
    },
    "ProductAssetModel": {
      "type": "object",
      "properties": {
        "assetBlobId": {
          "type": "string"
        },
        "assetOriginalName": {
          "type": "string"
        },
        "conversionFormats": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "GLB",
              "USDZ",
              "OPTIMIZED"
            ]
          }
        },
        "generationRequestUuid": {
          "type": "string"
        },
        "materialBlobId": {
          "type": "string"
        },
        "models": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductAssetModelModel"
          }
        },
        "thumbnailBlobId": {
          "type": "string"
        }
      },
      "title": "ProductAssetModel"
    },
    "ProductAssetModelConversionErrorModel": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "ProductAssetModelConversionErrorModel"
    },
    "ProductAssetModelModel": {
      "type": "object",
      "properties": {
        "conversionError": {
          "$ref": "#/definitions/ProductAssetModelConversionErrorModel"
        },
        "conversionFormat": {
          "type": "string",
          "enum": [
            "GLB",
            "USDZ",
            "OPTIMIZED"
          ]
        },
        "conversionStatus": {
          "type": "string",
          "enum": [
            "PENDING",
            "CONVERTING",
            "COMPLETED",
            "FAILED",
            "NO_ASSET",
            "TERMINATED"
          ]
        },
        "modelBlobId": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ProductAssetModelModel"
    },
    "ProductAttachmentResponseModel": {
      "title": "ProductAttachmentResponseModel",
      "allOf": [
        {
          "$ref": "#/definitions/AttachmentResponseModel"
        },
        {
          "type": "object",
          "properties": {
            "blobId": {
              "type": "string"
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "entityType": {
              "type": "string",
              "enum": [
                "COMMENT",
                "ANNOTATION",
                "PRODUCT",
                "ANNOTATION_COMMENT",
                "VARIANT_GROUP"
              ]
            },
            "entityUuid": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "productUuid": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "PRODUCT",
                "VARIANT_GROUP"
              ]
            },
            "updated": {
              "type": "string",
              "format": "date-time"
            },
            "uuid": {
              "type": "string"
            }
          },
          "title": "ProductAttachmentResponseModel"
        }
      ]
    },
    "ProductAttributeModel": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "ProductAttributeModel"
    },
    "ProductCreateAndSendForReviewResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "SUBSCRIPTION_MAX_PRODUCT_COUNT"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductCreateAndSendForReviewResultResponseConflict"
    },
    "ProductCreateAndSendForReviewResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRESET_NOT_FOUND",
              "STRIPE_CUSTOMER_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductCreateAndSendForReviewResultResponseNotFound"
    },
    "ProductCreateAndSendForReviewResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/ProductCreateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductCreateAndSendForReviewResultResponseOk"
    },
    "ProductCreateAndSendForReviewResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_REVIEWERS",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_NAME",
              "MISSING_OPTIMIZATION_SIMPLIFICATION",
              "FORBIDDEN_OPTIMIZATION_SIMPLIFICATION",
              "MISSING_OPTIMIZATION_ACCURACY",
              "FORBIDDEN_OPTIMIZATION_ACCURACY",
              "MISSING_PRODUCT_AUTO_PUBLISH_OPTION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductCreateAndSendForReviewResultResponseUnprocessable"
    },
    "ProductCreateResponseModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "productSessionUuId": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ProductCreateResponseModel"
    },
    "ProductCreateResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "SUBSCRIPTION_MAX_PRODUCT_COUNT"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductCreateResultResponseConflict"
    },
    "ProductCreateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "STRIPE_CUSTOMER_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductCreateResultResponseNotFound"
    },
    "ProductCreateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/ProductCreateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductCreateResultResponseOk"
    },
    "ProductCreateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_NAME",
              "MISSING_OPTIMIZATION_SIMPLIFICATION",
              "FORBIDDEN_OPTIMIZATION_SIMPLIFICATION",
              "MISSING_OPTIMIZATION_ACCURACY",
              "FORBIDDEN_OPTIMIZATION_ACCURACY",
              "MISSING_PRODUCT_AUTO_PUBLISH_OPTION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductCreateResultResponseUnprocessable"
    },
    "ProductDeleteResponseModel": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ProductDeleteResponseModel"
    },
    "ProductDeleteResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_NAME",
              "MISSING_NAMES",
              "MISSING_STATUS",
              "MISSING_PRODUCT_AUTO_PUBLISH_OPTION",
              "MISSING_PRODUCT_ASSET_DELETE_OPTION",
              "MISSING_MODEL_OPS_PARAMETERS",
              "INVALID_MODEL_OPS_PARAMETERS",
              "MISSING_MODEL",
              "PRODUCT_NOT_FOUND",
              "PRESET_NOT_FOUND",
              "PRODUCT_CHANGE_IS_UNAVAILABLE",
              "STRIPE_CUSTOMER_NOT_FOUND",
              "SUBSCRIPTION_MAX_PRODUCT_COUNT",
              "LOCATION_NOT_FOUND",
              "TAG_NOT_FOUND",
              "MISSING_PRODUCT_STATUS",
              "MISSING_PRODUCT_MALWARE_STATUS",
              "INVALID_PRODUCT_MALWARE_STATUS",
              "PRODUCT_ALREADY_LIVE",
              "MISSING_PIPELINE",
              "PRODUCT_ALREADY_REVIEWED",
              "MISSING_REVIEWERS",
              "MISSING_PAGE",
              "MISSING_ASSET",
              "MISSING_MODIFIER",
              "MISSING_SIZE",
              "PRODUCT_NOT_UPDATABLE",
              "MISSING_UPDATED_BEFORE",
              "MISSING_REMOVED_BEFORE",
              "INVALID_PRODUCTS_SIZE"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/ProductDeleteResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductDeleteResultResponse"
    },
    "ProductDeleteResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_CHANGE_IS_UNAVAILABLE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductDeleteResultResponseConflict"
    },
    "ProductDeleteResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/ProductDeleteResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductDeleteResultResponseOk"
    },
    "ProductDeleteResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_ORGANIZATION_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductDeleteResultResponseUnprocessable"
    },
    "ProductGenerationRequestCreateRequest": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "autoPublish": {
          "type": "boolean"
        },
        "clientUuid": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "locationsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modelOpsParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "name": {
          "type": "string"
        },
        "pipelineUuid": {
          "type": "string"
        },
        "presetUuid": {
          "type": "string"
        },
        "tagsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ProductGenerationRequestCreateRequest"
    },
    "ProductGenerationRequestCreateResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_FILE_BLOB_ID",
              "MISSING_CLIENT_UUID",
              "MISSING_ORGANIZATION_UUID",
              "NOT_FOUND",
              "INVALID_PAGE",
              "INVALID_SIZE",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "INVALID_UPDATE_STATUS_REQUEST",
              "MISSING_PIPELINE",
              "MISSING_MALWARE_STATUS",
              "MISSING_STATUS",
              "MISSING_MODEL_OPS_PARAMETERS",
              "MISSING_ORIGINAL_BLOB",
              "MISSING_ORIGINAL_BLOB_NAME",
              "MISSING_ORIGINAL_BLOB_BLOB_ID",
              "MISSING_ORIGINAL_BLOB_SIZE",
              "MISSING_MODIFIER",
              "SUBSCRIPTION_LIMIT_EXCEEDED",
              "SUBSCRIPTION_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/ProductGenerationRequestCreateResultResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductGenerationRequestCreateResultResponse"
    },
    "ProductGenerationRequestCreateResultResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "ProductGenerationRequestCreateResultResponseModel"
    },
    "ProductGenerationRequestErrorModel": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "ProductGenerationRequestErrorModel"
    },
    "ProductGenerationRequestGetResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_FILE_BLOB_ID",
              "MISSING_CLIENT_UUID",
              "MISSING_ORGANIZATION_UUID",
              "NOT_FOUND",
              "INVALID_PAGE",
              "INVALID_SIZE",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "INVALID_UPDATE_STATUS_REQUEST",
              "MISSING_PIPELINE",
              "MISSING_MALWARE_STATUS",
              "MISSING_STATUS",
              "MISSING_MODEL_OPS_PARAMETERS",
              "MISSING_ORIGINAL_BLOB",
              "MISSING_ORIGINAL_BLOB_NAME",
              "MISSING_ORIGINAL_BLOB_BLOB_ID",
              "MISSING_ORIGINAL_BLOB_SIZE",
              "MISSING_MODIFIER",
              "SUBSCRIPTION_LIMIT_EXCEEDED",
              "SUBSCRIPTION_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/ProductGenerationRequestGetResultResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductGenerationRequestGetResultResponse"
    },
    "ProductGenerationRequestGetResultResponseModel": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "error": {
          "$ref": "#/definitions/ProductGenerationRequestErrorModel"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductGenerationRequestItemsModel"
          }
        },
        "modelOpsParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "name": {
          "type": "string"
        },
        "organizationUuid": {
          "type": "string"
        },
        "originalBlob": {
          "$ref": "#/definitions/ProductGenerationRequestOriginalBlobModel"
        },
        "pipelineUuid": {
          "type": "string"
        },
        "presetUuid": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "NO_FILE",
            "PENDING",
            "PROCESSING",
            "PRODUCT_GENERATION",
            "FAILED",
            "SUCCESS"
          ]
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ProductGenerationRequestGetResultResponseModel"
    },
    "ProductGenerationRequestItemsModel": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ProductGenerationRequestErrorModel"
        },
        "name": {
          "type": "string"
        },
        "originalBlobId": {
          "type": "string"
        }
      },
      "title": "ProductGenerationRequestItemsModel"
    },
    "ProductGenerationRequestOriginalBlobModel": {
      "type": "object",
      "properties": {
        "assetOriginalSize": {
          "type": "integer",
          "format": "int64"
        },
        "originalBlobId": {
          "type": "string"
        },
        "originalBlobName": {
          "type": "string"
        }
      },
      "title": "ProductGenerationRequestOriginalBlobModel"
    },
    "ProductGenerationRequestSearchGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductGenerationRequestGetResultResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ProductGenerationRequestSearchGridResponseModel"
    },
    "ProductGenerationRequestSearchResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_FILE_BLOB_ID",
              "MISSING_CLIENT_UUID",
              "MISSING_ORGANIZATION_UUID",
              "NOT_FOUND",
              "INVALID_PAGE",
              "INVALID_SIZE",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "INVALID_UPDATE_STATUS_REQUEST",
              "MISSING_PIPELINE",
              "MISSING_MALWARE_STATUS",
              "MISSING_STATUS",
              "MISSING_MODEL_OPS_PARAMETERS",
              "MISSING_ORIGINAL_BLOB",
              "MISSING_ORIGINAL_BLOB_NAME",
              "MISSING_ORIGINAL_BLOB_BLOB_ID",
              "MISSING_ORIGINAL_BLOB_SIZE",
              "MISSING_MODIFIER",
              "SUBSCRIPTION_LIMIT_EXCEEDED",
              "SUBSCRIPTION_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/ProductGenerationRequestSearchGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductGenerationRequestSearchResultResponse"
    },
    "ProductGetResponseModel": {
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/AssetModel"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "autoPublish": {
          "type": "boolean"
        },
        "clientUuid": {
          "type": "string"
        },
        "conversionStatus": {
          "type": "string",
          "enum": [
            "PENDING",
            "CONVERTING",
            "COMPLETED",
            "FAILED",
            "NO_ASSET",
            "TERMINATED"
          ]
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "isUpdatable": {
          "type": "boolean"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductLocationsResponseModel"
          }
        },
        "malwareProcessingStatus": {
          "type": "string",
          "enum": [
            "NO_FILE",
            "NOT_SCANNED",
            "FAILED",
            "SCANNING",
            "SUCCEEDED"
          ]
        },
        "materialBlobId": {
          "type": "string"
        },
        "modelOpsParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "name": {
          "type": "string"
        },
        "organizationUuid": {
          "type": "string"
        },
        "pipelineUuid": {
          "type": "string"
        },
        "presetName": {
          "type": "string"
        },
        "presetUuid": {
          "type": "string"
        },
        "rendererConfigs": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "WAITING_REVIEW",
            "APPROVED",
            "REJECTED",
            "LIVE"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductTagsResponseModel"
          }
        },
        "updatable": {
          "type": "boolean"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        },
        "variantGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductGetVariantGroupResponseModel"
          }
        }
      },
      "title": "ProductGetResponseModel"
    },
    "ProductGetResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_NAME",
              "MISSING_NAMES",
              "MISSING_STATUS",
              "MISSING_PRODUCT_AUTO_PUBLISH_OPTION",
              "MISSING_PRODUCT_ASSET_DELETE_OPTION",
              "MISSING_MODEL_OPS_PARAMETERS",
              "INVALID_MODEL_OPS_PARAMETERS",
              "MISSING_MODEL",
              "PRODUCT_NOT_FOUND",
              "PRESET_NOT_FOUND",
              "PRODUCT_CHANGE_IS_UNAVAILABLE",
              "STRIPE_CUSTOMER_NOT_FOUND",
              "SUBSCRIPTION_MAX_PRODUCT_COUNT",
              "LOCATION_NOT_FOUND",
              "TAG_NOT_FOUND",
              "MISSING_PRODUCT_STATUS",
              "MISSING_PRODUCT_MALWARE_STATUS",
              "INVALID_PRODUCT_MALWARE_STATUS",
              "PRODUCT_ALREADY_LIVE",
              "MISSING_PIPELINE",
              "PRODUCT_ALREADY_REVIEWED",
              "MISSING_REVIEWERS",
              "MISSING_PAGE",
              "MISSING_ASSET",
              "MISSING_MODIFIER",
              "MISSING_SIZE",
              "PRODUCT_NOT_UPDATABLE",
              "MISSING_UPDATED_BEFORE",
              "MISSING_REMOVED_BEFORE",
              "INVALID_PRODUCTS_SIZE"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/ProductGetResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductGetResultResponse"
    },
    "ProductGetResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductGetResultResponseNotFound"
    },
    "ProductGetResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/ProductGetResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductGetResultResponseOk"
    },
    "ProductGetResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductGetResultResponseUnprocessable"
    },
    "ProductGetVariantGroupResponseModel": {
      "type": "object",
      "properties": {
        "variantGroupName": {
          "type": "string"
        },
        "variantGroupUuid": {
          "type": "string"
        }
      },
      "title": "ProductGetVariantGroupResponseModel"
    },
    "ProductGridSearchResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSearchResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ProductGridSearchResponseModel"
    },
    "ProductHardDeleteResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "ProductHardDeleteResponseModel"
    },
    "ProductHardDeleteResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_NAME",
              "MISSING_NAMES",
              "MISSING_STATUS",
              "MISSING_PRODUCT_AUTO_PUBLISH_OPTION",
              "MISSING_PRODUCT_ASSET_DELETE_OPTION",
              "MISSING_MODEL_OPS_PARAMETERS",
              "INVALID_MODEL_OPS_PARAMETERS",
              "MISSING_MODEL",
              "PRODUCT_NOT_FOUND",
              "PRESET_NOT_FOUND",
              "PRODUCT_CHANGE_IS_UNAVAILABLE",
              "STRIPE_CUSTOMER_NOT_FOUND",
              "SUBSCRIPTION_MAX_PRODUCT_COUNT",
              "LOCATION_NOT_FOUND",
              "TAG_NOT_FOUND",
              "MISSING_PRODUCT_STATUS",
              "MISSING_PRODUCT_MALWARE_STATUS",
              "INVALID_PRODUCT_MALWARE_STATUS",
              "PRODUCT_ALREADY_LIVE",
              "MISSING_PIPELINE",
              "PRODUCT_ALREADY_REVIEWED",
              "MISSING_REVIEWERS",
              "MISSING_PAGE",
              "MISSING_ASSET",
              "MISSING_MODIFIER",
              "MISSING_SIZE",
              "PRODUCT_NOT_UPDATABLE",
              "MISSING_UPDATED_BEFORE",
              "MISSING_REMOVED_BEFORE",
              "INVALID_PRODUCTS_SIZE"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/ProductHardDeleteResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductHardDeleteResultResponse"
    },
    "ProductHardDeleteResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/ProductHardDeleteResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductHardDeleteResultResponseOk"
    },
    "ProductLocationsResponseModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ProductLocationsResponseModel"
    },
    "ProductLocationsSearchResponseModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ProductLocationsSearchResponseModel"
    },
    "ProductPublishToFacebookRequest": {
      "type": "object",
      "properties": {
        "productUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ProductPublishToFacebookRequest"
    },
    "ProductPublishToFacebookResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "ProductPublishToFacebookResponseModel"
    },
    "ProductPublishToFacebookResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_NAME",
              "MISSING_NAMES",
              "MISSING_STATUS",
              "MISSING_PRODUCT_AUTO_PUBLISH_OPTION",
              "MISSING_PRODUCT_ASSET_DELETE_OPTION",
              "MISSING_MODEL_OPS_PARAMETERS",
              "INVALID_MODEL_OPS_PARAMETERS",
              "MISSING_MODEL",
              "PRODUCT_NOT_FOUND",
              "PRESET_NOT_FOUND",
              "PRODUCT_CHANGE_IS_UNAVAILABLE",
              "STRIPE_CUSTOMER_NOT_FOUND",
              "SUBSCRIPTION_MAX_PRODUCT_COUNT",
              "LOCATION_NOT_FOUND",
              "TAG_NOT_FOUND",
              "MISSING_PRODUCT_STATUS",
              "MISSING_PRODUCT_MALWARE_STATUS",
              "INVALID_PRODUCT_MALWARE_STATUS",
              "PRODUCT_ALREADY_LIVE",
              "MISSING_PIPELINE",
              "PRODUCT_ALREADY_REVIEWED",
              "MISSING_REVIEWERS",
              "MISSING_PAGE",
              "MISSING_ASSET",
              "MISSING_MODIFIER",
              "MISSING_SIZE",
              "PRODUCT_NOT_UPDATABLE",
              "MISSING_UPDATED_BEFORE",
              "MISSING_REMOVED_BEFORE",
              "INVALID_PRODUCTS_SIZE"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/ProductPublishToFacebookResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductPublishToFacebookResultResponse"
    },
    "ProductSearchInOneClientResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/ProductGridSearchResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductSearchInOneClientResultResponseOk"
    },
    "ProductSearchInOneClientResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_CLIENT_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductSearchInOneClientResultResponseUnprocessable"
    },
    "ProductSearchRequest": {
      "type": "object",
      "properties": {
        "attributeKey": {
          "type": "string"
        },
        "attributeValue": {
          "type": "string"
        },
        "clientUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conversionStatuses": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "PENDING",
              "CONVERTING",
              "COMPLETED",
              "FAILED",
              "NO_ASSET",
              "TERMINATED"
            ]
          }
        },
        "description": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "locationsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "organizationUuid": {
          "type": "string"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "1",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "searchTerm": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "30",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "sorts": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "DRAFT",
              "WAITING_REVIEW",
              "APPROVED",
              "REJECTED",
              "LIVE"
            ]
          }
        },
        "tagName": {
          "type": "string"
        },
        "tagsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variantGroupName": {
          "type": "string"
        },
        "variantGroupsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ProductSearchRequest"
    },
    "ProductSearchResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_SLUG",
              "MISSING_CLIENTS_UUIDS",
              "INVALID_VARIANT_GROUP_UUID",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_ORGANIZATION_SLUG",
              "PRODUCT_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/ProductGridSearchResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductSearchResponse"
    },
    "ProductSearchResponseModel": {
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/ProductAssetModel"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductAttributeModel"
          }
        },
        "clientSlug": {
          "type": "string"
        },
        "clientUuid": {
          "type": "string"
        },
        "conversionStatus": {
          "type": "string",
          "enum": [
            "PENDING",
            "CONVERTING",
            "COMPLETED",
            "FAILED",
            "NO_ASSET",
            "TERMINATED"
          ]
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductLocationsSearchResponseModel"
          }
        },
        "malwareProcessingStatus": {
          "type": "string",
          "enum": [
            "FAILED",
            "SCANNING"
          ]
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "WAITING_REVIEW",
            "APPROVED",
            "REJECTED",
            "LIVE"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductTagsSearchResponseModel"
          }
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        },
        "variantGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductVariantGroupsSearchResponseModel"
          }
        }
      },
      "title": "ProductSearchResponseModel"
    },
    "ProductSearchResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/ProductGridSearchResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductSearchResultResponseOk"
    },
    "ProductSearchResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_CLIENTS_UUIDS"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductSearchResultResponseUnprocessable"
    },
    "ProductStatusUpdateResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_NAME",
              "MISSING_NAMES",
              "MISSING_STATUS",
              "MISSING_PRODUCT_AUTO_PUBLISH_OPTION",
              "MISSING_PRODUCT_ASSET_DELETE_OPTION",
              "MISSING_MODEL_OPS_PARAMETERS",
              "INVALID_MODEL_OPS_PARAMETERS",
              "MISSING_MODEL",
              "PRODUCT_NOT_FOUND",
              "PRESET_NOT_FOUND",
              "PRODUCT_CHANGE_IS_UNAVAILABLE",
              "STRIPE_CUSTOMER_NOT_FOUND",
              "SUBSCRIPTION_MAX_PRODUCT_COUNT",
              "LOCATION_NOT_FOUND",
              "TAG_NOT_FOUND",
              "MISSING_PRODUCT_STATUS",
              "MISSING_PRODUCT_MALWARE_STATUS",
              "INVALID_PRODUCT_MALWARE_STATUS",
              "PRODUCT_ALREADY_LIVE",
              "MISSING_PIPELINE",
              "PRODUCT_ALREADY_REVIEWED",
              "MISSING_REVIEWERS",
              "MISSING_PAGE",
              "MISSING_ASSET",
              "MISSING_MODIFIER",
              "MISSING_SIZE",
              "PRODUCT_NOT_UPDATABLE",
              "MISSING_UPDATED_BEFORE",
              "MISSING_REMOVED_BEFORE",
              "INVALID_PRODUCTS_SIZE"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/EmptyResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductStatusUpdateResultResponse"
    },
    "ProductStatusUpdateResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_CHANGE_IS_UNAVAILABLE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductStatusUpdateResultResponseConflict"
    },
    "ProductStatusUpdateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductStatusUpdateResultResponseNotFound"
    },
    "ProductStatusUpdateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/EmptyResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductStatusUpdateResultResponseOk"
    },
    "ProductStatusUpdateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_STATUS"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductStatusUpdateResultResponseUnprocessable"
    },
    "ProductStatusUpdateStatusToWaitingReviewResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_CHANGE_IS_UNAVAILABLE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductStatusUpdateStatusToWaitingReviewResultResponseConflict"
    },
    "ProductStatusUpdateStatusToWaitingReviewResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductStatusUpdateStatusToWaitingReviewResultResponseNotFound"
    },
    "ProductStatusUpdateStatusToWaitingReviewResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/EmptyResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductStatusUpdateStatusToWaitingReviewResultResponseOk"
    },
    "ProductStatusUpdateStatusToWaitingReviewResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_REVIEWERS",
              "MISSING_UUID",
              "MISSING_ORGANIZATION_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductStatusUpdateStatusToWaitingReviewResultResponseUnprocessable"
    },
    "ProductTagsResponseModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ProductTagsResponseModel"
    },
    "ProductTagsSearchResponseModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ProductTagsSearchResponseModel"
    },
    "ProductUpdateAndSendForReviewResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_CHANGE_IS_UNAVAILABLE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductUpdateAndSendForReviewResultResponseConflict"
    },
    "ProductUpdateAndSendForReviewResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND",
              "ASSET_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductUpdateAndSendForReviewResultResponseNotFound"
    },
    "ProductUpdateAndSendForReviewResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_REVIEWERS",
              "MISSING_UUID",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_NAME",
              "MISSING_OPTIMIZATION_SIMPLIFICATION",
              "FORBIDDEN_OPTIMIZATION_SIMPLIFICATION",
              "MISSING_OPTIMIZATION_ACCURACY",
              "FORBIDDEN_OPTIMIZATION_ACCURACY",
              "MISSING_PRODUCT_ASSET_DELETE_OPTION",
              "MISSING_PRODUCT_AUTO_PUBLISH_OPTION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductUpdateAndSendForReviewResultResponseUnprocessable"
    },
    "ProductUpdateResponseModel": {
      "type": "object",
      "properties": {
        "productSessionUuId": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ProductUpdateResponseModel"
    },
    "ProductUpdateResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_NAME",
              "MISSING_NAMES",
              "MISSING_STATUS",
              "MISSING_PRODUCT_AUTO_PUBLISH_OPTION",
              "MISSING_PRODUCT_ASSET_DELETE_OPTION",
              "MISSING_MODEL_OPS_PARAMETERS",
              "INVALID_MODEL_OPS_PARAMETERS",
              "MISSING_MODEL",
              "PRODUCT_NOT_FOUND",
              "PRESET_NOT_FOUND",
              "PRODUCT_CHANGE_IS_UNAVAILABLE",
              "STRIPE_CUSTOMER_NOT_FOUND",
              "SUBSCRIPTION_MAX_PRODUCT_COUNT",
              "LOCATION_NOT_FOUND",
              "TAG_NOT_FOUND",
              "MISSING_PRODUCT_STATUS",
              "MISSING_PRODUCT_MALWARE_STATUS",
              "INVALID_PRODUCT_MALWARE_STATUS",
              "PRODUCT_ALREADY_LIVE",
              "MISSING_PIPELINE",
              "PRODUCT_ALREADY_REVIEWED",
              "MISSING_REVIEWERS",
              "MISSING_PAGE",
              "MISSING_ASSET",
              "MISSING_MODIFIER",
              "MISSING_SIZE",
              "PRODUCT_NOT_UPDATABLE",
              "MISSING_UPDATED_BEFORE",
              "MISSING_REMOVED_BEFORE",
              "INVALID_PRODUCTS_SIZE"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/ProductUpdateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductUpdateResultResponse"
    },
    "ProductUpdateResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_CHANGE_IS_UNAVAILABLE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductUpdateResultResponseConflict"
    },
    "ProductUpdateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND",
              "ASSET_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductUpdateResultResponseNotFound"
    },
    "ProductUpdateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/ProductUpdateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductUpdateResultResponseOk"
    },
    "ProductUpdateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_NAME",
              "MISSING_OPTIMIZATION_SIMPLIFICATION",
              "FORBIDDEN_OPTIMIZATION_SIMPLIFICATION",
              "MISSING_OPTIMIZATION_ACCURACY",
              "FORBIDDEN_OPTIMIZATION_ACCURACY",
              "MISSING_PRODUCT_ASSET_DELETE_OPTION",
              "MISSING_PRODUCT_AUTO_PUBLISH_OPTION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductUpdateResultResponseUnprocessable"
    },
    "ProductUpdateStatusToApprovedResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_CHANGE_IS_UNAVAILABLE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductUpdateStatusToApprovedResultResponseConflict"
    },
    "ProductUpdateStatusToApprovedResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND",
              "ASSET_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductUpdateStatusToApprovedResultResponseNotFound"
    },
    "ProductUpdateStatusToApprovedResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/ProductUpdateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductUpdateStatusToApprovedResultResponseOk"
    },
    "ProductUpdateStatusToApprovedResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_NAME",
              "MISSING_OPTIMIZATION_SIMPLIFICATION",
              "FORBIDDEN_OPTIMIZATION_SIMPLIFICATION",
              "MISSING_OPTIMIZATION_ACCURACY",
              "FORBIDDEN_OPTIMIZATION_ACCURACY",
              "MISSING_PRODUCT_ASSET_DELETE_OPTION",
              "MISSING_PRODUCT_AUTO_PUBLISH_OPTION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductUpdateStatusToApprovedResultResponseUnprocessable"
    },
    "ProductUpdateStatusToRejectedResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_CHANGE_IS_UNAVAILABLE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductUpdateStatusToRejectedResultResponseConflict"
    },
    "ProductUpdateStatusToRejectedResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND",
              "ASSET_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductUpdateStatusToRejectedResultResponseNotFound"
    },
    "ProductUpdateStatusToRejectedResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/ProductUpdateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ProductUpdateStatusToRejectedResultResponseOk"
    },
    "ProductUpdateStatusToRejectedResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_NAME",
              "MISSING_OPTIMIZATION_SIMPLIFICATION",
              "FORBIDDEN_OPTIMIZATION_SIMPLIFICATION",
              "MISSING_OPTIMIZATION_ACCURACY",
              "FORBIDDEN_OPTIMIZATION_ACCURACY",
              "MISSING_PRODUCT_ASSET_DELETE_OPTION",
              "MISSING_PRODUCT_AUTO_PUBLISH_OPTION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ProductUpdateStatusToRejectedResultResponseUnprocessable"
    },
    "ProductVariantGroupsSearchResponseModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ProductVariantGroupsSearchResponseModel"
    },
    "PublishVariantGroupResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "PublishVariantGroupResponseModel"
    },
    "RejectInvitationOrganizationResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_TOKEN",
              "MISSING_OWNER_FULL_NAME",
              "MISSING_EMAIL",
              "MISSING_ORGANIZATION_NAME",
              "MISSING_ORGANIZATION_SLUG",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_SLUG",
              "MISSING_CUSTOMER_SUBSCRIPTION_DEFINITION_UUID",
              "MISSING_INVITATION_STATUS",
              "INVALID_SLUG",
              "INVALID_TOKEN",
              "SLUG_IS_NOT_AVAILABLE",
              "NOT_FOUND",
              "TOKEN_NOT_FOUND",
              "ALREADY_REJECTED_INVITATION",
              "ALREADY_ACCEPTED_INVITATION",
              "MISSING_USER_UUID",
              "USER_NOT_FOUND",
              "TOKEN_IS_EXPIRED",
              "MISSING_USER_FULL_NAME",
              "MISSING_USER_PASSWORD",
              "USER_ALREADY_EXISTS_FOR_EMAIL"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/EmptyResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "RejectInvitationOrganizationResponse"
    },
    "ResolveAnnotationRequestModel": {
      "type": "object",
      "properties": {
        "resolved": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ResolveAnnotationRequestModel"
    },
    "ResolveAnnotationResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "ResolveAnnotationResponseModel"
    },
    "ResolveAnnotationResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_USER_UUID",
              "MISSING_PRODUCT_UUID",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_TEXT_AND_ATTACHMENTS",
              "MISSING_RESOLVED",
              "MISSING_DIMENSIONS",
              "ANNOTATION_NOT_FOUND",
              "PRODUCT_NOT_FOUND",
              "INVALID_TEXT_SIZE",
              "INVALID_ATTACHMENTS_SIZE",
              "PRODUCT_ORGANIZATION_UUID_NOT_MATCH",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "USER_ACCESS_DENIED",
              "ALREADY_RESOLVED",
              "MISSING_DELETE_PERMISSION"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/ResolveAnnotationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ResolveAnnotationResultResponse"
    },
    "SearchAttachmentRequestModel": {
      "type": "object",
      "properties": {
        "entityType": {
          "type": "string",
          "enum": [
            "COMMENT",
            "ANNOTATION",
            "PRODUCT",
            "ANNOTATION_COMMENT",
            "VARIANT_GROUP"
          ]
        },
        "entityUuid": {
          "type": "string"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "1",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "productUuid": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "30",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "sortDirection": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC",
            "UNSORTED"
          ]
        },
        "variantGroupUuid": {
          "type": "string"
        }
      },
      "title": "SearchAttachmentRequestModel"
    },
    "SearchHotspotRequestModel": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "1",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "productUuid": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "30",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "SearchHotspotRequestModel"
    },
    "SearchLocationGridSearchAdminResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchLocationSearchAdminResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "SearchLocationGridSearchAdminResponseModel"
    },
    "SearchLocationSearchAdminRequest": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        },
        "fromCreated": {
          "type": "string",
          "format": "date-time"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "1",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "searchTerm": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "30",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "tagNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "toCreated": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "SearchLocationSearchAdminRequest"
    },
    "SearchLocationSearchAdminResponseModel": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchLocationTagsSearchAdminResponseModel"
          }
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "SearchLocationSearchAdminResponseModel"
    },
    "SearchLocationSearchAdminResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/SearchLocationGridSearchAdminResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SearchLocationSearchAdminResultResponse"
    },
    "SearchLocationSearchAdminResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/SearchLocationGridSearchAdminResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SearchLocationSearchAdminResultResponseOk"
    },
    "SearchLocationTagsSearchAdminResponseModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "SearchLocationTagsSearchAdminResponseModel"
    },
    "SearchTagGridSearchAdminResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchTagSearchAdminResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "SearchTagGridSearchAdminResponseModel"
    },
    "SearchTagSearchAdminResponseModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "SearchTagSearchAdminResponseModel"
    },
    "SearchTagSearchAdminResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_ORGANIZATION_UUID"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/SearchTagGridSearchAdminResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SearchTagSearchAdminResultResponse"
    },
    "SearchTagSearchAdminResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/SearchTagGridSearchAdminResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "SearchTagSearchAdminResultResponseOk"
    },
    "ShowroomBulkDeleteResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "SHOWROOM_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ShowroomBulkDeleteResultResponseNotFound"
    },
    "ShowroomBulkDeleteResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/BulkDeleteShowroomResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ShowroomBulkDeleteResultResponseOk"
    },
    "ShowroomBulkDeleteResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUIDS"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ShowroomBulkDeleteResultResponseUnprocessable"
    },
    "ShowroomCreateResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "INVALID_PRODUCTS_SIZE",
              "DUPLICATED_PRODUCTS_UUIDS",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ShowroomCreateResultResponseConflict"
    },
    "ShowroomCreateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ShowroomCreateResultResponseNotFound"
    },
    "ShowroomCreateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/CreateShowroomResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ShowroomCreateResultResponseOk"
    },
    "ShowroomCreateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_ORGANIZATION_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ShowroomCreateResultResponseUnprocessable"
    },
    "ShowroomDeleteResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "SHOWROOM_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ShowroomDeleteResultResponseNotFound"
    },
    "ShowroomDeleteResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/DeleteShowroomResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ShowroomDeleteResultResponseOk"
    },
    "ShowroomDeleteResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ShowroomDeleteResultResponseUnprocessable"
    },
    "ShowroomDetailsRequestModel": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "1",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "30",
          "minimum": 1,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ShowroomDetailsRequestModel"
    },
    "ShowroomDetailsResponseModel": {
      "type": "object",
      "properties": {
        "clientUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "hasDeletedProducts": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "organizationUuid": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShowroomViewProductModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ShowroomDetailsResponseModel"
    },
    "ShowroomGetByUuidResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "SHOWROOM_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ShowroomGetByUuidResultResponseNotFound"
    },
    "ShowroomGetByUuidResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/CreateShowroomResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ShowroomGetByUuidResultResponseOk"
    },
    "ShowroomGetByUuidResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ShowroomGetByUuidResultResponseUnprocessable"
    },
    "ShowroomGetResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_NAME",
              "MISSING_PRODUCT_UUIDS",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "INVALID_PRODUCTS_SIZE",
              "INVALID_PASSWORD",
              "INCORRECT_PASSWORD",
              "INVALID_PRODUCT_UUID",
              "SHOWROOM_NOT_FOUND",
              "PRODUCT_NOT_FOUND",
              "DUPLICATED_PRODUCTS_UUIDS",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/ShowroomDetailsResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ShowroomGetResultResponse"
    },
    "ShowroomGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShowroomViewResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ShowroomGridResponseModel"
    },
    "ShowroomSearchResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/CreateShowroomResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ShowroomSearchResultResponseOk"
    },
    "ShowroomSearchResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PAGE",
              "MISSING_SIZE"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ShowroomSearchResultResponseUnprocessable"
    },
    "ShowroomUpdateResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "INVALID_PRODUCTS_SIZE",
              "DUPLICATED_PRODUCTS_UUIDS",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ShowroomUpdateResultResponseConflict"
    },
    "ShowroomUpdateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "SHOWROOM_NOT_FOUND",
              "PRODUCT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ShowroomUpdateResultResponseNotFound"
    },
    "ShowroomUpdateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/CreateShowroomResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ShowroomUpdateResultResponseOk"
    },
    "ShowroomUpdateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "ShowroomUpdateResultResponseUnprocessable"
    },
    "ShowroomViewAssetModel": {
      "type": "object",
      "properties": {
        "assetOriginalName": {
          "type": "string"
        },
        "models": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShowroomViewAssetModelModel"
          }
        },
        "thumbnailBlobId": {
          "type": "string"
        }
      },
      "title": "ShowroomViewAssetModel"
    },
    "ShowroomViewAssetModelModel": {
      "type": "object",
      "properties": {
        "conversionFormat": {
          "type": "string",
          "enum": [
            "GLB",
            "USDZ",
            "OPTIMIZED"
          ]
        },
        "conversionStatus": {
          "type": "string",
          "enum": [
            "PENDING",
            "CONVERTING",
            "COMPLETED",
            "FAILED",
            "NO_ASSET",
            "TERMINATED"
          ]
        },
        "modelBlobId": {
          "type": "string"
        },
        "modelSize": {
          "type": "integer",
          "format": "int64"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ShowroomViewAssetModelModel"
    },
    "ShowroomViewProductModel": {
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/ShowroomViewAssetModel"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clientUuid": {
          "type": "string"
        },
        "conversionStatus": {
          "type": "string",
          "enum": [
            "PENDING",
            "CONVERTING",
            "COMPLETED",
            "FAILED",
            "NO_ASSET",
            "TERMINATED"
          ]
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductLocationsResponseModel"
          }
        },
        "name": {
          "type": "string"
        },
        "productStatus": {
          "type": "string",
          "enum": [
            "DRAFT",
            "WAITING_REVIEW",
            "APPROVED",
            "REJECTED",
            "LIVE"
          ]
        },
        "rendererConfigs": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductTagsResponseModel"
          }
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ShowroomViewProductModel"
    },
    "ShowroomViewResponseModel": {
      "type": "object",
      "properties": {
        "clientUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "organizationUuid": {
          "type": "string"
        },
        "productsCount": {
          "type": "integer",
          "format": "int32"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "ShowroomViewResponseModel"
    },
    "ShowroomViewResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_NAME",
              "MISSING_PRODUCT_UUIDS",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "INVALID_PRODUCTS_SIZE",
              "INVALID_PASSWORD",
              "INCORRECT_PASSWORD",
              "INVALID_PRODUCT_UUID",
              "SHOWROOM_NOT_FOUND",
              "PRODUCT_NOT_FOUND",
              "DUPLICATED_PRODUCTS_UUIDS",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/ShowroomGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "ShowroomViewResultResponse"
    },
    "SignInRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "SignInRequest"
    },
    "SignInWithPersonalAccessTokenRequest": {
      "type": "object",
      "properties": {
        "personal-access-token": {
          "type": "string"
        }
      },
      "title": "SignInWithPersonalAccessTokenRequest"
    },
    "SingleUserInvitationForClientRequest": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "ORGANIZATION_ADMIN",
            "CLIENT_ORGANIZATION_ADMIN",
            "CLIENT_ORGANIZATION_CONTENT_MANAGER",
            "CLIENT_ORGANIZATION_VIEWER"
          ]
        }
      },
      "title": "SingleUserInvitationForClientRequest"
    },
    "TagCreateRequestModel": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tagGroupUuid": {
          "type": "string"
        }
      },
      "title": "TagCreateRequestModel"
    },
    "TagCreateResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "TagCreateResponseModel"
    },
    "TagCreateResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_TAG_GROUP_UUID",
              "MISSING_UUID",
              "MISSING_NAME",
              "TAG_GROUP_NOT_FOUND",
              "TAG_NOT_FOUND",
              "TAG_ALREADY_EXISTS_FOR_CLIENT_AND_NAME"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/TagCreateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagCreateResultResponse"
    },
    "TagCreateResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TAG_ALREADY_EXISTS_FOR_CLIENT_AND_NAME"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "TagCreateResultResponseConflict"
    },
    "TagCreateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/TagCreateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagCreateResultResponseOk"
    },
    "TagCreateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_CLIENT_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "TagCreateResultResponseUnprocessable"
    },
    "TagDeleteResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "TagDeleteResponseModel"
    },
    "TagDeleteResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_TAG_GROUP_UUID",
              "MISSING_UUID",
              "MISSING_NAME",
              "TAG_GROUP_NOT_FOUND",
              "TAG_NOT_FOUND",
              "TAG_ALREADY_EXISTS_FOR_CLIENT_AND_NAME"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/TagDeleteResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagDeleteResultResponse"
    },
    "TagDeleteResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TAG_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "TagDeleteResultResponseNotFound"
    },
    "TagDeleteResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/TagDeleteResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagDeleteResultResponseOk"
    },
    "TagGetByGroupResponseModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "TagGetByGroupResponseModel"
    },
    "TagGetByTagGroupResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_TAG_GROUP_UUID",
              "MISSING_UUID",
              "MISSING_NAME",
              "TAG_GROUP_NOT_FOUND",
              "TAG_NOT_FOUND",
              "TAG_ALREADY_EXISTS_FOR_CLIENT_AND_NAME"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/TagGetGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagGetByTagGroupResultResponse"
    },
    "TagGetByTagGroupResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/TagGetGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagGetByTagGroupResultResponseOk"
    },
    "TagGetGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagGetByGroupResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "TagGetGridResponseModel"
    },
    "TagGroupCreateRequest": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "TagGroupCreateRequest"
    },
    "TagGroupCreateResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "TagGroupCreateResponseModel"
    },
    "TagGroupCreateResultResponseModel": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_TAG_GROUPS_UUIDS",
              "MISSING_ANY_TAG_GROUP_UUID",
              "MISSING_NAME",
              "MISSING_UUID",
              "ALREADY_EXISTS_FOR_CLIENT_AND_NAME",
              "TAG_GROUP_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/TagGroupCreateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagGroupCreateResultResponseModel"
    },
    "TagGroupCreateResultResponseModelConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "ALREADY_EXISTS_FOR_CLIENT_AND_NAME"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "TagGroupCreateResultResponseModelConflict"
    },
    "TagGroupCreateResultResponseModelOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/TagGroupCreateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagGroupCreateResultResponseModelOk"
    },
    "TagGroupCreateResultResponseModelUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_CLIENT_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "TagGroupCreateResultResponseModelUnprocessable"
    },
    "TagGroupDeleteGridItemResponseModel": {
      "type": "object",
      "properties": {
        "deletedTagUuid": {
          "type": "string"
        }
      },
      "title": "TagGroupDeleteGridItemResponseModel"
    },
    "TagGroupDeleteGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagGroupDeleteGridItemResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "TagGroupDeleteGridResponseModel"
    },
    "TagGroupDeleteRequest": {
      "type": "object",
      "properties": {
        "tagGroupUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "TagGroupDeleteRequest"
    },
    "TagGroupDeleteResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_TAG_GROUPS_UUIDS",
              "MISSING_ANY_TAG_GROUP_UUID",
              "MISSING_NAME",
              "MISSING_UUID",
              "ALREADY_EXISTS_FOR_CLIENT_AND_NAME",
              "TAG_GROUP_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/TagGroupDeleteGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagGroupDeleteResultResponse"
    },
    "TagGroupDeleteResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TAG_GROUP_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "TagGroupDeleteResultResponseNotFound"
    },
    "TagGroupDeleteResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/TagGroupDeleteGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagGroupDeleteResultResponseOk"
    },
    "TagGroupDeleteResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_TAG_GROUPS_UUIDS",
              "MISSING_ANY_TAG_GROUP_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "TagGroupDeleteResultResponseUnprocessable"
    },
    "TagGroupGetGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagGroupGetResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "TagGroupGetGridResponseModel"
    },
    "TagGroupGetResponseModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagGetByGroupResponseModel"
          }
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "TagGroupGetResponseModel"
    },
    "TagGroupGetResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_TAG_GROUPS_UUIDS",
              "MISSING_ANY_TAG_GROUP_UUID",
              "MISSING_NAME",
              "MISSING_UUID",
              "ALREADY_EXISTS_FOR_CLIENT_AND_NAME",
              "TAG_GROUP_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/TagGroupGetGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagGroupGetResultResponse"
    },
    "TagGroupGetResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/TagGroupGetGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagGroupGetResultResponseOk"
    },
    "TagGroupUpdateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "TagGroupUpdateRequest"
    },
    "TagGroupUpdateResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "TagGroupUpdateResponseModel"
    },
    "TagGroupUpdateResultResponseModel": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_TAG_GROUPS_UUIDS",
              "MISSING_ANY_TAG_GROUP_UUID",
              "MISSING_NAME",
              "MISSING_UUID",
              "ALREADY_EXISTS_FOR_CLIENT_AND_NAME",
              "TAG_GROUP_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/TagGroupUpdateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagGroupUpdateResultResponseModel"
    },
    "TagGroupUpdateResultResponseModelConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "ALREADY_EXISTS_FOR_CLIENT_AND_NAME"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/TagGroupUpdateResponseModel"
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "TagGroupUpdateResultResponseModelConflict"
    },
    "TagGroupUpdateResultResponseModelNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TAG_GROUP_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/TagGroupUpdateResponseModel"
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "TagGroupUpdateResultResponseModelNotFound"
    },
    "TagGroupUpdateResultResponseModelOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/TagGroupUpdateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagGroupUpdateResultResponseModelOk"
    },
    "TagGroupUpdateResultResponseModelUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "TagGroupUpdateResultResponseModelUnprocessable"
    },
    "TagUpdateRequestModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tagGroupUuid": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "TagUpdateRequestModel"
    },
    "TagUpdateResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "TagUpdateResponseModel"
    },
    "TagUpdateResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_TAG_GROUP_UUID",
              "MISSING_UUID",
              "MISSING_NAME",
              "TAG_GROUP_NOT_FOUND",
              "TAG_NOT_FOUND",
              "TAG_ALREADY_EXISTS_FOR_CLIENT_AND_NAME"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/TagUpdateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagUpdateResultResponse"
    },
    "TagUpdateResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TAG_ALREADY_EXISTS_FOR_CLIENT_AND_NAME"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "TagUpdateResultResponseConflict"
    },
    "TagUpdateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "TAG_NOT_FOUND",
              "TAG_GROUP_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "TagUpdateResultResponseNotFound"
    },
    "TagUpdateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/TagUpdateResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagUpdateResultResponseOk"
    },
    "TagUpdateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_TAG_GROUP_UUID",
              "MISSING_NAME"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "TagUpdateResultResponseUnprocessable"
    },
    "TagUsedResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_UUID",
              "MISSING_TAG_GROUP_UUID",
              "MISSING_UUID",
              "MISSING_NAME",
              "TAG_GROUP_NOT_FOUND",
              "TAG_NOT_FOUND",
              "TAG_ALREADY_EXISTS_FOR_CLIENT_AND_NAME"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/DomainUsedResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagUsedResultResponse"
    },
    "TagUsedResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/DomainUsedResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "TagUsedResultResponseOk"
    },
    "TagUsedResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "TagUsedResultResponseUnprocessable"
    },
    "TextHotspotResponseModel": {
      "title": "TextHotspotResponseModel",
      "allOf": [
        {
          "$ref": "#/definitions/HotspotResponseModel"
        },
        {
          "type": "object",
          "properties": {
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "dimensions": {
              "type": "string"
            },
            "productUuid": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "TEXT",
                "IMAGE",
                "VIDEO"
              ]
            },
            "updated": {
              "type": "string",
              "format": "date-time"
            },
            "userUuid": {
              "type": "string"
            },
            "uuid": {
              "type": "string"
            }
          },
          "title": "TextHotspotResponseModel"
        }
      ]
    },
    "ThreeDComponentsModel": {
      "type": "object",
      "properties": {
        "poly": {
          "type": "integer",
          "format": "int64"
        },
        "tri": {
          "type": "integer",
          "format": "int64"
        },
        "vertex": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ThreeDComponentsModel"
    },
    "UpdateClientOrganizationRequest": {
      "type": "object",
      "properties": {
        "imageBlobId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "UpdateClientOrganizationRequest"
    },
    "UpdateClientOrganizationResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "UpdateClientOrganizationResponseModel"
    },
    "UpdateClientOrganizationResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_NAME",
              "MISSING_SLUG",
              "SLUG_ALREADY_EXISTS",
              "SLUG_NOT_VALID",
              "CLIENT_NOT_FOUND",
              "USER_NOT_FOUND",
              "ORGANIZATION_NOT_FOUND",
              "MISSING_USER_UUID"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/UpdateClientOrganizationResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "UpdateClientOrganizationResultResponse"
    },
    "UpdateHotspotRequestModel": {
      "type": "object",
      "properties": {
        "dimensions": {
          "type": "string"
        },
        "productUuid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "TEXT",
            "IMAGE",
            "VIDEO"
          ]
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "UpdateHotspotRequestModel"
    },
    "UpdateImageHotspotRequestModel": {
      "title": "UpdateImageHotspotRequestModel",
      "allOf": [
        {
          "$ref": "#/definitions/UpdateHotspotRequestModel"
        },
        {
          "type": "object",
          "properties": {
            "blobId": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "dimensions": {
              "type": "string"
            },
            "productUuid": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "TEXT",
                "IMAGE",
                "VIDEO"
              ]
            },
            "uuid": {
              "type": "string"
            }
          },
          "title": "UpdateImageHotspotRequestModel"
        }
      ]
    },
    "UpdateShowroomRequestModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "productsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "UpdateShowroomRequestModel"
    },
    "UpdateShowroomResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "UpdateShowroomResponseModel"
    },
    "UpdateShowroomResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_NAME",
              "MISSING_PRODUCT_UUIDS",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_PAGE",
              "MISSING_SIZE",
              "INVALID_PRODUCTS_SIZE",
              "INVALID_PASSWORD",
              "INCORRECT_PASSWORD",
              "INVALID_PRODUCT_UUID",
              "SHOWROOM_NOT_FOUND",
              "PRODUCT_NOT_FOUND",
              "DUPLICATED_PRODUCTS_UUIDS",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/UpdateShowroomResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "UpdateShowroomResultResponse"
    },
    "UpdateTextHotspotRequestModel": {
      "title": "UpdateTextHotspotRequestModel",
      "allOf": [
        {
          "$ref": "#/definitions/UpdateHotspotRequestModel"
        },
        {
          "type": "object",
          "properties": {
            "dimensions": {
              "type": "string"
            },
            "productUuid": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "TEXT",
                "IMAGE",
                "VIDEO"
              ]
            },
            "uuid": {
              "type": "string"
            }
          },
          "title": "UpdateTextHotspotRequestModel"
        }
      ]
    },
    "UpdateVariantGroupResponseModel": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "title": "UpdateVariantGroupResponseModel"
    },
    "UpdateVariantGroupResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_ORGANIZATION_OR_CLIENT_UUID",
              "MISSING_NAME",
              "MISSING_PRODUCTS_UUIDS",
              "VARIANT_GROUP_NOT_FOUND",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_STATUS",
              "INVALID_PRODUCTS_SIZE",
              "INVALID_PRODUCT_UUID",
              "PRODUCT_NOT_FOUND",
              "HAS_NOT_LIVE_PRODUCT",
              "VARIANT_GROUP_ALREADY_HAS_THE_SAME_STATUS",
              "TAG_NOT_FOUND",
              "ORGANIZATION_NOT_FOUND",
              "CLIENT_ORGANIZATION_NOT_FOUND",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION_OR_CLIENT"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/UpdateVariantGroupResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "UpdateVariantGroupResultResponse"
    },
    "UpdateVariantGroupStatusResultResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_CLIENT_UUID",
              "MISSING_ORGANIZATION_OR_CLIENT_UUID",
              "MISSING_NAME",
              "MISSING_PRODUCTS_UUIDS",
              "VARIANT_GROUP_NOT_FOUND",
              "MISSING_UUID",
              "MISSING_UUIDS",
              "MISSING_STATUS",
              "INVALID_PRODUCTS_SIZE",
              "INVALID_PRODUCT_UUID",
              "PRODUCT_NOT_FOUND",
              "HAS_NOT_LIVE_PRODUCT",
              "VARIANT_GROUP_ALREADY_HAS_THE_SAME_STATUS",
              "TAG_NOT_FOUND",
              "ORGANIZATION_NOT_FOUND",
              "CLIENT_ORGANIZATION_NOT_FOUND",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION_OR_CLIENT"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/PublishVariantGroupResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "UpdateVariantGroupStatusResultResponse"
    },
    "UpdateVideoHotspotRequestModel": {
      "title": "UpdateVideoHotspotRequestModel",
      "allOf": [
        {
          "$ref": "#/definitions/UpdateHotspotRequestModel"
        },
        {
          "type": "object",
          "properties": {
            "autoplaying": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            },
            "dimensions": {
              "type": "string"
            },
            "productUuid": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "TEXT",
                "IMAGE",
                "VIDEO"
              ]
            },
            "url": {
              "type": "string"
            },
            "uuid": {
              "type": "string"
            }
          },
          "title": "UpdateVideoHotspotRequestModel"
        }
      ]
    },
    "UserClientOrganizationResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_NAME",
              "MISSING_SLUG",
              "SLUG_ALREADY_EXISTS",
              "SLUG_NOT_VALID",
              "CLIENT_NOT_FOUND",
              "USER_NOT_FOUND",
              "ORGANIZATION_NOT_FOUND",
              "MISSING_USER_UUID"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/GetUserClientOrganizationsGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "UserClientOrganizationResponse"
    },
    "UserOrganizationResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_SLUG",
              "SLUG_ALREADY_EXISTS",
              "SLUG_NOT_VALID",
              "SLUG_NOT_FOUND",
              "MISSING_USER_UUID",
              "ORGANIZATION_NOT_FOUND",
              "MISSING_UUID",
              "USER_NOT_FOUND",
              "ORGANIZATION_INVITATION_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/GetUserOrganizationsGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "UserOrganizationResponse"
    },
    "UserOrganizationResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "USER_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "UserOrganizationResultResponseNotFound"
    },
    "UserOrganizationResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/GetUserOrganizationsGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "UserOrganizationResultResponseOk"
    },
    "UserOrganizationResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_USER_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "UserOrganizationResultResponseUnprocessable"
    },
    "VariantGroupAddProductsResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/AddProductsToVariantGroupsResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "VariantGroupAddProductsResponseOk"
    },
    "VariantGroupAttachmentCreateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "VARIANT_GROUP_NOT_FOUND",
              "COMMENT_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupAttachmentCreateResultResponseNotFound"
    },
    "VariantGroupAttachmentCreateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_BLOB_ID",
              "MISSING_VARIANT_GROUP_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupAttachmentCreateResultResponseUnprocessable"
    },
    "VariantGroupAttachmentDeleteResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "ATTACHMENT_NOT_FOUND",
              "VARIANT_GROUP_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupAttachmentDeleteResultResponseNotFound"
    },
    "VariantGroupAttachmentResponseModel": {
      "title": "VariantGroupAttachmentResponseModel",
      "allOf": [
        {
          "$ref": "#/definitions/AttachmentResponseModel"
        },
        {
          "type": "object",
          "properties": {
            "blobId": {
              "type": "string"
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "entityType": {
              "type": "string",
              "enum": [
                "COMMENT",
                "ANNOTATION",
                "PRODUCT",
                "ANNOTATION_COMMENT",
                "VARIANT_GROUP"
              ]
            },
            "entityUuid": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "PRODUCT",
                "VARIANT_GROUP"
              ]
            },
            "updated": {
              "type": "string",
              "format": "date-time"
            },
            "uuid": {
              "type": "string"
            },
            "variantGroupUuid": {
              "type": "string"
            }
          },
          "title": "VariantGroupAttachmentResponseModel"
        }
      ]
    },
    "VariantGroupCreateResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "INVALID_PRODUCTS_SIZE",
              "DUPLICATED_PRODUCTS_UUIDS",
              "DUPLICATED_TAGS_UUIDS",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupCreateResultResponseConflict"
    },
    "VariantGroupCreateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "PRODUCT_NOT_FOUND",
              "TAG_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupCreateResultResponseNotFound"
    },
    "VariantGroupCreateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/CreateVariantGroupResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "VariantGroupCreateResultResponseOk"
    },
    "VariantGroupCreateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "INVALID_PRODUCT_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupCreateResultResponseUnprocessable"
    },
    "VariantGroupDeleteResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "VARIANT_GROUP_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupDeleteResultResponseNotFound"
    },
    "VariantGroupDeleteResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/DeleteVariantGroupsResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "VariantGroupDeleteResultResponseOk"
    },
    "VariantGroupDeleteResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupDeleteResultResponseUnprocessable"
    },
    "VariantGroupDetailsResponseModel": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organizationUuid": {
          "type": "string"
        },
        "productsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "LIVE",
            "DRAFT"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariantGroupTagResponseModel"
          }
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "VariantGroupDetailsResponseModel"
    },
    "VariantGroupGetByUuidResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "VARIANT_GROUP_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupGetByUuidResultResponseNotFound"
    },
    "VariantGroupGetByUuidResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupGetByUuidResultResponseUnprocessable"
    },
    "VariantGroupGridResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariantGroupViewResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "VariantGroupGridResponseModel"
    },
    "VariantGroupGridSearchResponseModel": {
      "type": "object",
      "properties": {
        "grid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariantGroupSearchResponseModel"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "VariantGroupGridSearchResponseModel"
    },
    "VariantGroupSearchResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_CLIENT_SLUG",
              "MISSING_CLIENTS_UUIDS",
              "MISSING_ORGANIZATION_UUID",
              "MISSING_ORGANIZATION_SLUG",
              "PRODUCT_NOT_FOUND"
            ]
          }
        },
        "response": {
          "$ref": "#/definitions/VariantGroupGridSearchResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "VariantGroupSearchResponse"
    },
    "VariantGroupSearchResponseModel": {
      "type": "object",
      "properties": {
        "clientSlug": {
          "type": "string"
        },
        "clientUuid": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "productsUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "LIVE"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariantGroupTagsSearchResponseModel"
          }
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "VariantGroupSearchResponseModel"
    },
    "VariantGroupSearchResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "ORGANIZATION_NOT_FOUND",
              "CLIENT_ORGANIZATION_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupSearchResultResponseNotFound"
    },
    "VariantGroupSearchResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/VariantGroupGridResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "VariantGroupSearchResultResponseOk"
    },
    "VariantGroupSearchResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_PAGE",
              "MISSING_SIZE",
              "MISSING_ORGANIZATION_OR_CLIENT_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupSearchResultResponseUnprocessable"
    },
    "VariantGroupTagResponseModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "VariantGroupTagResponseModel"
    },
    "VariantGroupTagsSearchResponseModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "VariantGroupTagsSearchResponseModel"
    },
    "VariantGroupUpdateResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "INVALID_PRODUCTS_SIZE",
              "DUPLICATED_PRODUCTS_UUIDS",
              "DUPLICATED_TAGS_UUIDS",
              "PRODUCTS_NOT_IN_SAME_ORGANIZATION"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupUpdateResultResponseConflict"
    },
    "VariantGroupUpdateResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "VARIANT_GROUP_NOT_FOUND",
              "PRODUCT_NOT_FOUND",
              "TAG_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupUpdateResultResponseNotFound"
    },
    "VariantGroupUpdateResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/UpdateVariantGroupResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "VariantGroupUpdateResultResponseOk"
    },
    "VariantGroupUpdateResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_NAME",
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupUpdateResultResponseUnprocessable"
    },
    "VariantGroupUpdateStatusResultResponseConflict": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "VARIANT_GROUP_ALREADY_HAS_THE_SAME_STATUS",
              "HAS_NOT_LIVE_PRODUCT"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupUpdateStatusResultResponseConflict"
    },
    "VariantGroupUpdateStatusResultResponseNotFound": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "VARIANT_GROUP_NOT_FOUND"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupUpdateStatusResultResponseNotFound"
    },
    "VariantGroupUpdateStatusResultResponseOk": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/PublishVariantGroupResponseModel"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "VariantGroupUpdateStatusResultResponseOk"
    },
    "VariantGroupUpdateStatusResultResponseUnprocessable": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "errors",
          "items": {
            "type": "string",
            "enum": [
              "MISSING_UUID"
            ]
          }
        },
        "success": {
          "type": "boolean",
          "example": false,
          "description": "success"
        }
      },
      "title": "VariantGroupUpdateStatusResultResponseUnprocessable"
    },
    "VariantGroupViewResponseModel": {
      "type": "object",
      "properties": {
        "clientUuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "productsCount": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariantGroupTagResponseModel"
          }
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        }
      },
      "title": "VariantGroupViewResponseModel"
    },
    "VideoHotspotResponseModel": {
      "title": "VideoHotspotResponseModel",
      "allOf": [
        {
          "$ref": "#/definitions/HotspotResponseModel"
        },
        {
          "type": "object",
          "properties": {
            "autoplaying": {
              "type": "boolean"
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "description": {
              "type": "string"
            },
            "dimensions": {
              "type": "string"
            },
            "productUuid": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "TEXT",
                "IMAGE",
                "VIDEO"
              ]
            },
            "updated": {
              "type": "string",
              "format": "date-time"
            },
            "url": {
              "type": "string"
            },
            "userUuid": {
              "type": "string"
            },
            "uuid": {
              "type": "string"
            }
          },
          "title": "VideoHotspotResponseModel"
        }
      ]
    }
  }
}
